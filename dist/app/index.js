"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.app = void 0;
const cli_app_1 = require("src/app/cli-app");
const logger_1 = require("src/util/logger");
exports.app = {
    _server: undefined,
    start: () => {
        const args = process.argv.slice(2);
        const appToRun = new cli_app_1.CliApp(args);
        exports.app
            ._start(appToRun)
            .then(exports.app._registerOnExit)
            .catch(exports.app._onError)
            .catch((err) => logger_1.logger.error(err));
    },
    _registerOnExit: () => {
        ;
        ['SIGTERM', 'SIGINT'].forEach((signal) => {
            process.on(signal, () => {
                exports.app
                    ._stop()
                    .then(() => process.exit(0))
                    .catch((err) => logger_1.logger.error(err));
            });
        });
    },
    _stop: async () => {
        if (!exports.app._server)
            return;
        const server = exports.app._server;
        exports.app._server = undefined;
        await server.destroy();
    },
    _start: async (runApp) => {
        exports.app._server = runApp;
        await exports.app._server.initiate();
    },
    _onError: async (err) => {
        logger_1.logger.error(err.message);
        await exports.app._stop();
        process.exit(1);
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXBwL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLDZDQUF3QztBQUN4Qyw0Q0FBd0M7QUFFM0IsUUFBQSxHQUFHLEdBQUc7SUFDakIsT0FBTyxFQUFFLFNBQTRCO0lBQ3JDLEtBQUssRUFBRSxHQUFTLEVBQUU7UUFDaEIsTUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUE7UUFDbEMsTUFBTSxRQUFRLEdBQUcsSUFBSSxnQkFBTSxDQUFDLElBQUksQ0FBQyxDQUFBO1FBRWpDLFdBQUc7YUFDQSxNQUFNLENBQUMsUUFBUSxDQUFDO2FBQ2hCLElBQUksQ0FBQyxXQUFHLENBQUMsZUFBZSxDQUFDO2FBQ3pCLEtBQUssQ0FBQyxXQUFHLENBQUMsUUFBUSxDQUFDO2FBQ25CLEtBQUssQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsZUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBO0lBQ3RDLENBQUM7SUFDRCxlQUFlLEVBQUUsR0FBUyxFQUFFO1FBQzFCLENBQUM7UUFBQSxDQUFDLFNBQVMsRUFBRSxRQUFRLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFjLEVBQUUsRUFBRTtZQUNoRCxPQUFPLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUU7Z0JBQ3RCLFdBQUc7cUJBQ0EsS0FBSyxFQUFFO3FCQUNQLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO3FCQUMzQixLQUFLLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLGVBQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQTtZQUN0QyxDQUFDLENBQUMsQ0FBQTtRQUNKLENBQUMsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUNELEtBQUssRUFBRSxLQUFLLElBQW1CLEVBQUU7UUFDL0IsSUFBSSxDQUFDLFdBQUcsQ0FBQyxPQUFPO1lBQUUsT0FBTTtRQUN4QixNQUFNLE1BQU0sR0FBRyxXQUFHLENBQUMsT0FBTyxDQUFBO1FBQzFCLFdBQUcsQ0FBQyxPQUFPLEdBQUcsU0FBUyxDQUFBO1FBQ3ZCLE1BQU0sTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFBO0lBQ3hCLENBQUM7SUFDRCxNQUFNLEVBQUUsS0FBSyxFQUFFLE1BQVcsRUFBaUIsRUFBRTtRQUMzQyxXQUFHLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQTtRQUNwQixNQUFNLFdBQUcsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUE7SUFDOUIsQ0FBQztJQUNELFFBQVEsRUFBRSxLQUFLLEVBQUUsR0FBVSxFQUFpQixFQUFFO1FBQzVDLGVBQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFBO1FBQ3pCLE1BQU0sV0FBRyxDQUFDLEtBQUssRUFBRSxDQUFBO1FBQ2pCLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUE7SUFDakIsQ0FBQztDQUNGLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHAgfSBmcm9tICdAYmVlY29kZS9tc2gtbm9kZS1hcHAnXG5pbXBvcnQgeyBDbGlBcHAgfSBmcm9tICdzcmMvYXBwL2NsaS1hcHAnXG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdzcmMvdXRpbC9sb2dnZXInXG5cbmV4cG9ydCBjb25zdCBhcHAgPSB7XG4gIF9zZXJ2ZXI6IHVuZGVmaW5lZCBhcyB1bmRlZmluZWQgfCBhbnksXG4gIHN0YXJ0OiAoKTogdm9pZCA9PiB7XG4gICAgY29uc3QgYXJncyA9IHByb2Nlc3MuYXJndi5zbGljZSgyKVxuICAgIGNvbnN0IGFwcFRvUnVuID0gbmV3IENsaUFwcChhcmdzKVxuXG4gICAgYXBwXG4gICAgICAuX3N0YXJ0KGFwcFRvUnVuKVxuICAgICAgLnRoZW4oYXBwLl9yZWdpc3Rlck9uRXhpdClcbiAgICAgIC5jYXRjaChhcHAuX29uRXJyb3IpXG4gICAgICAuY2F0Y2goKGVycikgPT4gbG9nZ2VyLmVycm9yKGVycikpXG4gIH0sXG4gIF9yZWdpc3Rlck9uRXhpdDogKCk6IHZvaWQgPT4ge1xuICAgIDtbJ1NJR1RFUk0nLCAnU0lHSU5UJ10uZm9yRWFjaCgoc2lnbmFsOiBzdHJpbmcpID0+IHtcbiAgICAgIHByb2Nlc3Mub24oc2lnbmFsLCAoKSA9PiB7XG4gICAgICAgIGFwcFxuICAgICAgICAgIC5fc3RvcCgpXG4gICAgICAgICAgLnRoZW4oKCkgPT4gcHJvY2Vzcy5leGl0KDApKVxuICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiBsb2dnZXIuZXJyb3IoZXJyKSlcbiAgICAgIH0pXG4gICAgfSlcbiAgfSxcbiAgX3N0b3A6IGFzeW5jICgpOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgICBpZiAoIWFwcC5fc2VydmVyKSByZXR1cm5cbiAgICBjb25zdCBzZXJ2ZXIgPSBhcHAuX3NlcnZlclxuICAgIGFwcC5fc2VydmVyID0gdW5kZWZpbmVkXG4gICAgYXdhaXQgc2VydmVyLmRlc3Ryb3koKVxuICB9LFxuICBfc3RhcnQ6IGFzeW5jIChydW5BcHA6IEFwcCk6IFByb21pc2U8dm9pZD4gPT4ge1xuICAgIGFwcC5fc2VydmVyID0gcnVuQXBwXG4gICAgYXdhaXQgYXBwLl9zZXJ2ZXIuaW5pdGlhdGUoKVxuICB9LFxuICBfb25FcnJvcjogYXN5bmMgKGVycjogRXJyb3IpOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgICBsb2dnZXIuZXJyb3IoZXJyLm1lc3NhZ2UpXG4gICAgYXdhaXQgYXBwLl9zdG9wKClcbiAgICBwcm9jZXNzLmV4aXQoMSlcbiAgfSxcbn1cbiJdfQ==