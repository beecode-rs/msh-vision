"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("module-alias/register");
require("source-map-support/register");
require("src/util/config");
const msh_node_app_1 = require("@beecode/msh-node-app");
const logger_1 = require("@beecode/msh-node-app/lib/util/logger");
const msh_node_log_1 = require("@beecode/msh-node-log");
const console_logger_1 = require("@beecode/msh-node-log/lib/console-logger");
const cli_app_1 = require("src/app/cli-app");
const logger_2 = require("src/util/logger");
process.on('uncaughtException', (error) => (0, logger_2.logger)().error('Uncaught Exception', { error }));
process.on('unhandledRejection', (error) => (0, logger_2.logger)().error('Unhandled Rejection', { error }));
(0, logger_1.NodeAppLogger)(new console_logger_1.ConsoleLogger({ logLevel: msh_node_log_1.LogLevelType.DEBUG }));
(0, msh_node_app_1.appStarterFactory)(cli_app_1.CliApp)
    .start()
    .catch((err) => console.log(err)); // eslint-disable-line no-console
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpQ0FBOEI7QUFDOUIsdUNBQW9DO0FBQ3BDLDJCQUF3QjtBQUV4Qix3REFBeUQ7QUFDekQsa0VBQXFFO0FBQ3JFLHdEQUFvRDtBQUNwRCw2RUFBd0U7QUFDeEUsNkNBQXdDO0FBQ3hDLDRDQUF3QztBQUV4QyxPQUFPLENBQUMsRUFBRSxDQUFDLG1CQUFtQixFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxJQUFBLGVBQU0sR0FBRSxDQUFDLEtBQUssQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQTtBQUMzRixPQUFPLENBQUMsRUFBRSxDQUFDLG9CQUFvQixFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxJQUFBLGVBQU0sR0FBRSxDQUFDLEtBQUssQ0FBQyxxQkFBcUIsRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQTtBQUU3RixJQUFBLHNCQUFhLEVBQUMsSUFBSSw4QkFBYSxDQUFDLEVBQUUsUUFBUSxFQUFFLDJCQUFZLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFBO0FBRWxFLElBQUEsZ0NBQWlCLEVBQUMsZ0JBQU0sQ0FBQztLQUN0QixLQUFLLEVBQUU7S0FDUCxLQUFLLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQSxDQUFDLGlDQUFpQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnbW9kdWxlLWFsaWFzL3JlZ2lzdGVyJ1xuaW1wb3J0ICdzb3VyY2UtbWFwLXN1cHBvcnQvcmVnaXN0ZXInXG5pbXBvcnQgJ3NyYy91dGlsL2NvbmZpZydcblxuaW1wb3J0IHsgYXBwU3RhcnRlckZhY3RvcnkgfSBmcm9tICdAYmVlY29kZS9tc2gtbm9kZS1hcHAnXG5pbXBvcnQgeyBOb2RlQXBwTG9nZ2VyIH0gZnJvbSAnQGJlZWNvZGUvbXNoLW5vZGUtYXBwL2xpYi91dGlsL2xvZ2dlcidcbmltcG9ydCB7IExvZ0xldmVsVHlwZSB9IGZyb20gJ0BiZWVjb2RlL21zaC1ub2RlLWxvZydcbmltcG9ydCB7IENvbnNvbGVMb2dnZXIgfSBmcm9tICdAYmVlY29kZS9tc2gtbm9kZS1sb2cvbGliL2NvbnNvbGUtbG9nZ2VyJ1xuaW1wb3J0IHsgQ2xpQXBwIH0gZnJvbSAnc3JjL2FwcC9jbGktYXBwJ1xuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnc3JjL3V0aWwvbG9nZ2VyJ1xuXG5wcm9jZXNzLm9uKCd1bmNhdWdodEV4Y2VwdGlvbicsIChlcnJvcikgPT4gbG9nZ2VyKCkuZXJyb3IoJ1VuY2F1Z2h0IEV4Y2VwdGlvbicsIHsgZXJyb3IgfSkpXG5wcm9jZXNzLm9uKCd1bmhhbmRsZWRSZWplY3Rpb24nLCAoZXJyb3IpID0+IGxvZ2dlcigpLmVycm9yKCdVbmhhbmRsZWQgUmVqZWN0aW9uJywgeyBlcnJvciB9KSlcblxuTm9kZUFwcExvZ2dlcihuZXcgQ29uc29sZUxvZ2dlcih7IGxvZ0xldmVsOiBMb2dMZXZlbFR5cGUuREVCVUcgfSkpXG5cbmFwcFN0YXJ0ZXJGYWN0b3J5KENsaUFwcClcbiAgLnN0YXJ0KClcbiAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZVxuIl19