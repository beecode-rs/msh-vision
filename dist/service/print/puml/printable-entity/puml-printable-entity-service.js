"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.pumlPrintableEntityService = void 0;
const entity_class_1 = require("src/model/entity-class");
const entity_file_1 = require("src/model/entity-file");
const entity_interface_1 = require("src/model/entity-interface");
const entity_object_1 = require("src/model/entity-object");
const puml_printable_class_1 = require("src/service/print/puml/printable-entity/puml-printable-class");
const puml_printable_file_1 = require("src/service/print/puml/printable-entity/puml-printable-file");
const puml_printable_interface_1 = require("src/service/print/puml/printable-entity/puml-printable-interface");
const puml_printable_object_1 = require("src/service/print/puml/printable-entity/puml-printable-object");
const logger_1 = require("src/util/logger");
exports.pumlPrintableEntityService = {
    printableStrategyFromEntity: ({ entity }) => {
        switch (true) {
            case entity instanceof entity_class_1.EntityClass:
                return new puml_printable_class_1.PumlPrintableClass({ entity: entity });
            case entity instanceof entity_file_1.EntityFile:
                return new puml_printable_file_1.PumlPrintableFile({ entity: entity });
            case entity instanceof entity_object_1.EntityObject:
                return new puml_printable_object_1.PumlPrintableObject({ entity: entity });
            case entity instanceof entity_interface_1.EntityInterface:
                return new puml_printable_interface_1.PumlPrintableInterface({ entity: entity });
            default:
                logger_1.logger.warn(`Unknown entity type ${entity.constructor.name}`);
        }
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVtbC1wcmludGFibGUtZW50aXR5LXNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvc2VydmljZS9wcmludC9wdW1sL3ByaW50YWJsZS1lbnRpdHkvcHVtbC1wcmludGFibGUtZW50aXR5LXNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EseURBQW9EO0FBQ3BELHVEQUFrRDtBQUNsRCxpRUFBNEQ7QUFDNUQsMkRBQXNEO0FBQ3RELHVHQUFpRztBQUNqRyxxR0FBK0Y7QUFDL0YsK0dBQXlHO0FBQ3pHLHlHQUFtRztBQUVuRyw0Q0FBd0M7QUFFM0IsUUFBQSwwQkFBMEIsR0FBRztJQUN4QywyQkFBMkIsRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFzQixFQUEwQixFQUFFO1FBQ3RGLFFBQVEsSUFBSSxFQUFFO1lBQ1osS0FBSyxNQUFNLFlBQVksMEJBQVc7Z0JBQ2hDLE9BQU8sSUFBSSx5Q0FBa0IsQ0FBQyxFQUFFLE1BQU0sRUFBRSxNQUFxQixFQUFFLENBQUMsQ0FBQTtZQUNsRSxLQUFLLE1BQU0sWUFBWSx3QkFBVTtnQkFDL0IsT0FBTyxJQUFJLHVDQUFpQixDQUFDLEVBQUUsTUFBTSxFQUFFLE1BQW9CLEVBQUUsQ0FBQyxDQUFBO1lBQ2hFLEtBQUssTUFBTSxZQUFZLDRCQUFZO2dCQUNqQyxPQUFPLElBQUksMkNBQW1CLENBQUMsRUFBRSxNQUFNLEVBQUUsTUFBc0IsRUFBRSxDQUFDLENBQUE7WUFDcEUsS0FBSyxNQUFNLFlBQVksa0NBQWU7Z0JBQ3BDLE9BQU8sSUFBSSxpREFBc0IsQ0FBQyxFQUFFLE1BQU0sRUFBRSxNQUF5QixFQUFFLENBQUMsQ0FBQTtZQUMxRTtnQkFDRSxlQUFNLENBQUMsSUFBSSxDQUFDLHVCQUF1QixNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUE7U0FDaEU7SUFDSCxDQUFDO0NBQ0YsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVudGl0eSB9IGZyb20gJ3NyYy9tb2RlbC9lbnRpdHknXG5pbXBvcnQgeyBFbnRpdHlDbGFzcyB9IGZyb20gJ3NyYy9tb2RlbC9lbnRpdHktY2xhc3MnXG5pbXBvcnQgeyBFbnRpdHlGaWxlIH0gZnJvbSAnc3JjL21vZGVsL2VudGl0eS1maWxlJ1xuaW1wb3J0IHsgRW50aXR5SW50ZXJmYWNlIH0gZnJvbSAnc3JjL21vZGVsL2VudGl0eS1pbnRlcmZhY2UnXG5pbXBvcnQgeyBFbnRpdHlPYmplY3QgfSBmcm9tICdzcmMvbW9kZWwvZW50aXR5LW9iamVjdCdcbmltcG9ydCB7IFB1bWxQcmludGFibGVDbGFzcyB9IGZyb20gJ3NyYy9zZXJ2aWNlL3ByaW50L3B1bWwvcHJpbnRhYmxlLWVudGl0eS9wdW1sLXByaW50YWJsZS1jbGFzcydcbmltcG9ydCB7IFB1bWxQcmludGFibGVGaWxlIH0gZnJvbSAnc3JjL3NlcnZpY2UvcHJpbnQvcHVtbC9wcmludGFibGUtZW50aXR5L3B1bWwtcHJpbnRhYmxlLWZpbGUnXG5pbXBvcnQgeyBQdW1sUHJpbnRhYmxlSW50ZXJmYWNlIH0gZnJvbSAnc3JjL3NlcnZpY2UvcHJpbnQvcHVtbC9wcmludGFibGUtZW50aXR5L3B1bWwtcHJpbnRhYmxlLWludGVyZmFjZSdcbmltcG9ydCB7IFB1bWxQcmludGFibGVPYmplY3QgfSBmcm9tICdzcmMvc2VydmljZS9wcmludC9wdW1sL3ByaW50YWJsZS1lbnRpdHkvcHVtbC1wcmludGFibGUtb2JqZWN0J1xuaW1wb3J0IHsgUHVtbEVudGl0eSB9IGZyb20gJ3NyYy9zZXJ2aWNlL3ByaW50L3B1bWwvcHVtbC1lbnRpdHknXG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdzcmMvdXRpbC9sb2dnZXInXG5cbmV4cG9ydCBjb25zdCBwdW1sUHJpbnRhYmxlRW50aXR5U2VydmljZSA9IHtcbiAgcHJpbnRhYmxlU3RyYXRlZ3lGcm9tRW50aXR5OiAoeyBlbnRpdHkgfTogeyBlbnRpdHk6IEVudGl0eSB9KTogUHVtbEVudGl0eSB8IHVuZGVmaW5lZCA9PiB7XG4gICAgc3dpdGNoICh0cnVlKSB7XG4gICAgICBjYXNlIGVudGl0eSBpbnN0YW5jZW9mIEVudGl0eUNsYXNzOlxuICAgICAgICByZXR1cm4gbmV3IFB1bWxQcmludGFibGVDbGFzcyh7IGVudGl0eTogZW50aXR5IGFzIEVudGl0eUNsYXNzIH0pXG4gICAgICBjYXNlIGVudGl0eSBpbnN0YW5jZW9mIEVudGl0eUZpbGU6XG4gICAgICAgIHJldHVybiBuZXcgUHVtbFByaW50YWJsZUZpbGUoeyBlbnRpdHk6IGVudGl0eSBhcyBFbnRpdHlGaWxlIH0pXG4gICAgICBjYXNlIGVudGl0eSBpbnN0YW5jZW9mIEVudGl0eU9iamVjdDpcbiAgICAgICAgcmV0dXJuIG5ldyBQdW1sUHJpbnRhYmxlT2JqZWN0KHsgZW50aXR5OiBlbnRpdHkgYXMgRW50aXR5T2JqZWN0IH0pXG4gICAgICBjYXNlIGVudGl0eSBpbnN0YW5jZW9mIEVudGl0eUludGVyZmFjZTpcbiAgICAgICAgcmV0dXJuIG5ldyBQdW1sUHJpbnRhYmxlSW50ZXJmYWNlKHsgZW50aXR5OiBlbnRpdHkgYXMgRW50aXR5SW50ZXJmYWNlIH0pXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBsb2dnZXIud2FybihgVW5rbm93biBlbnRpdHkgdHlwZSAke2VudGl0eS5jb25zdHJ1Y3Rvci5uYW1lfWApXG4gICAgfVxuICB9LFxufVxuIl19