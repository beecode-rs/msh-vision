"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.importExtractor = void 0;
const import_reference_1 = require("src/model/import-reference");
exports.importExtractor = {
    extract: (file) => {
        return file.imports.map(exports.importExtractor._parseImports).flat();
    },
    _parseImports: (imp) => {
        return imp.specifiers.map((spec) => exports.importExtractor._importRefFromSpecifier({ imp, spec }));
    },
    _importRefFromSpecifier: ({ imp: { libraryName }, spec: { specifier, alias }, }) => {
        return new import_reference_1.ImportReference({
            filePath: exports.importExtractor._pathCleanup(libraryName),
            name: specifier,
            ...(alias && { alias }),
        });
    },
    _pathCleanup: (filePath) => {
        const cleanCurrFolder = filePath.startsWith('./') ? filePath.slice(2) : filePath;
        return `${cleanCurrFolder}.ts`;
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1wb3J0LWV4dHJhY3Rvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zZXJ2aWNlL2NvbnZlcnQvdHlwZXNjcmlwdHkvaW1wb3J0LWV4dHJhY3Rvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxpRUFBNEQ7QUFJL0MsUUFBQSxlQUFlLEdBQUc7SUFDN0IsT0FBTyxFQUFFLENBQUMsSUFBVSxFQUFxQixFQUFFO1FBQ3pDLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUJBQWUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQTtJQUMvRCxDQUFDO0lBQ0QsYUFBYSxFQUFFLENBQUMsR0FBVyxFQUFxQixFQUFFO1FBQ2hELE9BQVEsR0FBbUIsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyx1QkFBZSxDQUFDLHVCQUF1QixDQUFDLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQTtJQUM5RyxDQUFDO0lBQ0QsdUJBQXVCLEVBQUUsQ0FBQyxFQUN4QixHQUFHLEVBQUUsRUFBRSxXQUFXLEVBQUUsRUFDcEIsSUFBSSxFQUFFLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxHQUkzQixFQUFtQixFQUFFO1FBQ3BCLE9BQU8sSUFBSSxrQ0FBZSxDQUFDO1lBQ3pCLFFBQVEsRUFBRSx1QkFBZSxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUM7WUFDbkQsSUFBSSxFQUFFLFNBQVM7WUFDZixHQUFHLENBQUMsS0FBSyxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUM7U0FDeEIsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUNELFlBQVksRUFBRSxDQUFDLFFBQWdCLEVBQVUsRUFBRTtRQUN6QyxNQUFNLGVBQWUsR0FBRyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUE7UUFDaEYsT0FBTyxHQUFHLGVBQWUsS0FBSyxDQUFBO0lBQ2hDLENBQUM7Q0FDRixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW1wb3J0UmVmZXJlbmNlIH0gZnJvbSAnc3JjL21vZGVsL2ltcG9ydC1yZWZlcmVuY2UnXG5pbXBvcnQgeyBGaWxlLCBJbXBvcnQgfSBmcm9tICd0eXBlc2NyaXB0LXBhcnNlcidcbmltcG9ydCB7IE5hbWVkSW1wb3J0IH0gZnJvbSAndHlwZXNjcmlwdC1wYXJzZXIvaW1wb3J0cy9OYW1lZEltcG9ydCdcblxuZXhwb3J0IGNvbnN0IGltcG9ydEV4dHJhY3RvciA9IHtcbiAgZXh0cmFjdDogKGZpbGU6IEZpbGUpOiBJbXBvcnRSZWZlcmVuY2VbXSA9PiB7XG4gICAgcmV0dXJuIGZpbGUuaW1wb3J0cy5tYXAoaW1wb3J0RXh0cmFjdG9yLl9wYXJzZUltcG9ydHMpLmZsYXQoKVxuICB9LFxuICBfcGFyc2VJbXBvcnRzOiAoaW1wOiBJbXBvcnQpOiBJbXBvcnRSZWZlcmVuY2VbXSA9PiB7XG4gICAgcmV0dXJuIChpbXAgYXMgTmFtZWRJbXBvcnQpLnNwZWNpZmllcnMubWFwKChzcGVjKSA9PiBpbXBvcnRFeHRyYWN0b3IuX2ltcG9ydFJlZkZyb21TcGVjaWZpZXIoeyBpbXAsIHNwZWMgfSkpXG4gIH0sXG4gIF9pbXBvcnRSZWZGcm9tU3BlY2lmaWVyOiAoe1xuICAgIGltcDogeyBsaWJyYXJ5TmFtZSB9LFxuICAgIHNwZWM6IHsgc3BlY2lmaWVyLCBhbGlhcyB9LFxuICB9OiB7XG4gICAgaW1wOiB7IGxpYnJhcnlOYW1lOiBzdHJpbmcgfVxuICAgIHNwZWM6IHsgc3BlY2lmaWVyOiBzdHJpbmc7IGFsaWFzPzogc3RyaW5nIH1cbiAgfSk6IEltcG9ydFJlZmVyZW5jZSA9PiB7XG4gICAgcmV0dXJuIG5ldyBJbXBvcnRSZWZlcmVuY2Uoe1xuICAgICAgZmlsZVBhdGg6IGltcG9ydEV4dHJhY3Rvci5fcGF0aENsZWFudXAobGlicmFyeU5hbWUpLFxuICAgICAgbmFtZTogc3BlY2lmaWVyLFxuICAgICAgLi4uKGFsaWFzICYmIHsgYWxpYXMgfSksXG4gICAgfSlcbiAgfSxcbiAgX3BhdGhDbGVhbnVwOiAoZmlsZVBhdGg6IHN0cmluZyk6IHN0cmluZyA9PiB7XG4gICAgY29uc3QgY2xlYW5DdXJyRm9sZGVyID0gZmlsZVBhdGguc3RhcnRzV2l0aCgnLi8nKSA/IGZpbGVQYXRoLnNsaWNlKDIpIDogZmlsZVBhdGhcbiAgICByZXR1cm4gYCR7Y2xlYW5DdXJyRm9sZGVyfS50c2BcbiAgfSxcbn1cbiJdfQ==