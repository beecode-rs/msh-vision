"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypescriptConvertStrategy = void 0;
const export_extractor_1 = require("src/service/convert/typescripty/export-extractor");
const import_extractor_1 = require("src/service/convert/typescripty/import-extractor");
const typescript_entity_service_1 = require("src/service/convert/typescripty/typescript-entity-service");
const file_service_1 = require("src/service/file-service");
const typescript_parser_1 = require("typescript-parser");
const parser = new typescript_parser_1.TypescriptParser();
class TypescriptConvertStrategy {
    constructor({ filePath, rootPath, folderPath }) {
        this._filePath = filePath;
        this._rootPath = rootPath ?? '/';
        this._folderPath = folderPath;
    }
    async convert() {
        const file = await parser.parseFile(file_service_1.fileService.joinPaths(this._folderPath, this._filePath), this._rootPath);
        const entities = typescript_entity_service_1.typescriptEntityService.extractEntitiesFromFile(file, this._filePath);
        entities.forEach((entity) => {
            entity.importReference.push(...import_extractor_1.importExtractor.extract(file));
            entity.exportReference.push(...export_extractor_1.exportExtractor.extract(file));
        });
        return entities;
    }
}
exports.TypescriptConvertStrategy = TypescriptConvertStrategy;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXNjcmlwdC1jb252ZXJ0LXN0cmF0ZWd5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3NlcnZpY2UvY29udmVydC90eXBlc2NyaXB0eS90eXBlc2NyaXB0LWNvbnZlcnQtc3RyYXRlZ3kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUEsdUZBQWtGO0FBQ2xGLHVGQUFrRjtBQUNsRix5R0FBbUc7QUFDbkcsMkRBQXNEO0FBQ3RELHlEQUFvRDtBQUVwRCxNQUFNLE1BQU0sR0FBRyxJQUFJLG9DQUFnQixFQUFFLENBQUE7QUFFckMsTUFBYSx5QkFBeUI7SUFJcEMsWUFBWSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsVUFBVSxFQUErRDtRQUN6RyxJQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsQ0FBQTtRQUN6QixJQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsSUFBSSxHQUFHLENBQUE7UUFDaEMsSUFBSSxDQUFDLFdBQVcsR0FBRyxVQUFVLENBQUE7SUFDL0IsQ0FBQztJQUVNLEtBQUssQ0FBQyxPQUFPO1FBQ2xCLE1BQU0sSUFBSSxHQUFHLE1BQU0sTUFBTSxDQUFDLFNBQVMsQ0FBQywwQkFBVyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUE7UUFFNUcsTUFBTSxRQUFRLEdBQUcsbURBQXVCLENBQUMsdUJBQXVCLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQTtRQUN0RixRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDMUIsTUFBTSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsR0FBRyxrQ0FBZSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFBO1lBQzdELE1BQU0sQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEdBQUcsa0NBQWUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQTtRQUMvRCxDQUFDLENBQUMsQ0FBQTtRQUVGLE9BQU8sUUFBUSxDQUFBO0lBQ2pCLENBQUM7Q0FDRjtBQXJCRCw4REFxQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbnRpdHkgfSBmcm9tICdzcmMvbW9kZWwvZW50aXR5J1xuaW1wb3J0IHsgQ29udmVydFN0cmF0ZWd5IH0gZnJvbSAnc3JjL3NlcnZpY2UvY29udmVydC9jb252ZXJ0LXN0cmF0ZWd5J1xuaW1wb3J0IHsgZXhwb3J0RXh0cmFjdG9yIH0gZnJvbSAnc3JjL3NlcnZpY2UvY29udmVydC90eXBlc2NyaXB0eS9leHBvcnQtZXh0cmFjdG9yJ1xuaW1wb3J0IHsgaW1wb3J0RXh0cmFjdG9yIH0gZnJvbSAnc3JjL3NlcnZpY2UvY29udmVydC90eXBlc2NyaXB0eS9pbXBvcnQtZXh0cmFjdG9yJ1xuaW1wb3J0IHsgdHlwZXNjcmlwdEVudGl0eVNlcnZpY2UgfSBmcm9tICdzcmMvc2VydmljZS9jb252ZXJ0L3R5cGVzY3JpcHR5L3R5cGVzY3JpcHQtZW50aXR5LXNlcnZpY2UnXG5pbXBvcnQgeyBmaWxlU2VydmljZSB9IGZyb20gJ3NyYy9zZXJ2aWNlL2ZpbGUtc2VydmljZSdcbmltcG9ydCB7IFR5cGVzY3JpcHRQYXJzZXIgfSBmcm9tICd0eXBlc2NyaXB0LXBhcnNlcidcblxuY29uc3QgcGFyc2VyID0gbmV3IFR5cGVzY3JpcHRQYXJzZXIoKVxuXG5leHBvcnQgY2xhc3MgVHlwZXNjcmlwdENvbnZlcnRTdHJhdGVneSBpbXBsZW1lbnRzIENvbnZlcnRTdHJhdGVneSB7XG4gIHByb3RlY3RlZCByZWFkb25seSBfZmlsZVBhdGg6IHN0cmluZ1xuICBwcm90ZWN0ZWQgcmVhZG9ubHkgX3Jvb3RQYXRoOiBzdHJpbmdcbiAgcHJvdGVjdGVkIHJlYWRvbmx5IF9mb2xkZXJQYXRoOiBzdHJpbmdcbiAgY29uc3RydWN0b3IoeyBmaWxlUGF0aCwgcm9vdFBhdGgsIGZvbGRlclBhdGggfTogeyBmaWxlUGF0aDogc3RyaW5nOyBmb2xkZXJQYXRoOiBzdHJpbmc7IHJvb3RQYXRoPzogc3RyaW5nIH0pIHtcbiAgICB0aGlzLl9maWxlUGF0aCA9IGZpbGVQYXRoXG4gICAgdGhpcy5fcm9vdFBhdGggPSByb290UGF0aCA/PyAnLydcbiAgICB0aGlzLl9mb2xkZXJQYXRoID0gZm9sZGVyUGF0aFxuICB9XG5cbiAgcHVibGljIGFzeW5jIGNvbnZlcnQoKTogUHJvbWlzZTxFbnRpdHlbXT4ge1xuICAgIGNvbnN0IGZpbGUgPSBhd2FpdCBwYXJzZXIucGFyc2VGaWxlKGZpbGVTZXJ2aWNlLmpvaW5QYXRocyh0aGlzLl9mb2xkZXJQYXRoLCB0aGlzLl9maWxlUGF0aCksIHRoaXMuX3Jvb3RQYXRoKVxuXG4gICAgY29uc3QgZW50aXRpZXMgPSB0eXBlc2NyaXB0RW50aXR5U2VydmljZS5leHRyYWN0RW50aXRpZXNGcm9tRmlsZShmaWxlLCB0aGlzLl9maWxlUGF0aClcbiAgICBlbnRpdGllcy5mb3JFYWNoKChlbnRpdHkpID0+IHtcbiAgICAgIGVudGl0eS5pbXBvcnRSZWZlcmVuY2UucHVzaCguLi5pbXBvcnRFeHRyYWN0b3IuZXh0cmFjdChmaWxlKSlcbiAgICAgIGVudGl0eS5leHBvcnRSZWZlcmVuY2UucHVzaCguLi5leHBvcnRFeHRyYWN0b3IuZXh0cmFjdChmaWxlKSlcbiAgICB9KVxuXG4gICAgcmV0dXJuIGVudGl0aWVzXG4gIH1cbn1cbiJdfQ==