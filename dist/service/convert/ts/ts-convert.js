"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TsConvert = void 0;
const ts_1 = __importDefault(require("src/module/ts"));
const ts_parser_file_1 = require("src/service/convert/ts/parser/ts-parser-file");
const ts_entity_parser_1 = require("src/service/convert/ts/ts-entity-parser");
const ts_entity_service_1 = require("src/service/convert/ts/ts-entity-service");
const file_service_1 = require("src/service/file-service");
class TsConvert {
    constructor({ filePath, folderPath }) {
        this._filePath = filePath;
        this._folderPath = folderPath;
    }
    async convert() {
        const filePath = file_service_1.fileService.joinPaths(this._folderPath, this._filePath);
        const fileName = file_service_1.fileService.fileNameFromPath(filePath, { withExtension: true });
        const parsedSource = await this._parseFile(filePath, fileName);
        const hasExportsInFile = ts_entity_service_1.tsEntityService.checkIfThereAreAnyExports({ parsedSource });
        const inProjectPath = file_service_1.fileService.cleanupPath(this._filePath);
        if (!hasExportsInFile)
            return new ts_parser_file_1.TsParserFile({ parsedSource, fileName, inProjectPath }).parse();
        const entityParser = new ts_entity_parser_1.TsEntityParser({ parsedSource, fileName, inProjectPath });
        return entityParser.parsedEntities();
    }
    /**
     * https://allenhwkim.medium.com/how-to-parse-typescript-from-source-643387971f4e
     *
     * https://ts-ast-viewer.com/#code/JYWwDg9gTgLgBAbzgYQuCA7Aph+BfOAMyjTgHIABAQwwHMBXAGyqgHoBjaLMgbgCgKqdNlwAKBHzhwAzlkZZ2MaAC5yIAJ5kANJLgws4ZvtVkAFnMYQ4ILADoyfPAEo+WAB6RYcds2nS4ALLqQpAi8BJ4QA
     */
    async _parseFile(filePath, fileName) {
        const fileSource = await file_service_1.fileService.readFile(filePath);
        return ts_1.default.createSourceFile(fileName, fileSource, ts_1.default.ScriptTarget.ES2020); // TODO implement param for script target
    }
}
exports.TsConvert = TsConvert;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHMtY29udmVydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zZXJ2aWNlL2NvbnZlcnQvdHMvdHMtY29udmVydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSx1REFBOEI7QUFFOUIsaUZBQTJFO0FBQzNFLDhFQUF3RTtBQUN4RSxnRkFBMEU7QUFDMUUsMkRBQXNEO0FBRXRELE1BQWEsU0FBUztJQUlwQixZQUFZLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBNEM7UUFDNUUsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUE7UUFDekIsSUFBSSxDQUFDLFdBQVcsR0FBRyxVQUFVLENBQUE7SUFDL0IsQ0FBQztJQUVNLEtBQUssQ0FBQyxPQUFPO1FBQ2xCLE1BQU0sUUFBUSxHQUFHLDBCQUFXLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO1FBQ3hFLE1BQU0sUUFBUSxHQUFHLDBCQUFXLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLEVBQUUsYUFBYSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUE7UUFDaEYsTUFBTSxZQUFZLEdBQUcsTUFBTSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FBQTtRQUU5RCxNQUFNLGdCQUFnQixHQUFHLG1DQUFlLENBQUMseUJBQXlCLENBQUMsRUFBRSxZQUFZLEVBQUUsQ0FBQyxDQUFBO1FBQ3BGLE1BQU0sYUFBYSxHQUFHLDBCQUFXLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQTtRQUM3RCxJQUFJLENBQUMsZ0JBQWdCO1lBQUUsT0FBTyxJQUFJLDZCQUFZLENBQUMsRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLGFBQWEsRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUE7UUFFakcsTUFBTSxZQUFZLEdBQUcsSUFBSSxpQ0FBYyxDQUFDLEVBQUUsWUFBWSxFQUFFLFFBQVEsRUFBRSxhQUFhLEVBQUUsQ0FBQyxDQUFBO1FBQ2xGLE9BQU8sWUFBWSxDQUFDLGNBQWMsRUFBRSxDQUFBO0lBQ3RDLENBQUM7SUFFRDs7OztPQUlHO0lBQ08sS0FBSyxDQUFDLFVBQVUsQ0FBQyxRQUFnQixFQUFFLFFBQWdCO1FBQzNELE1BQU0sVUFBVSxHQUFHLE1BQU0sMEJBQVcsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUE7UUFDdkQsT0FBTyxZQUFFLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLFVBQVUsRUFBRSxZQUFFLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFBLENBQUMseUNBQXlDO0lBQ3BILENBQUM7Q0FDRjtBQS9CRCw4QkErQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbnRpdHkgfSBmcm9tICdzcmMvbW9kZWwvZW50aXR5J1xuaW1wb3J0IHRzIGZyb20gJ3NyYy9tb2R1bGUvdHMnXG5pbXBvcnQgeyBDb252ZXJ0U3RyYXRlZ3kgfSBmcm9tICdzcmMvc2VydmljZS9jb252ZXJ0L2NvbnZlcnQtc3RyYXRlZ3knXG5pbXBvcnQgeyBUc1BhcnNlckZpbGUgfSBmcm9tICdzcmMvc2VydmljZS9jb252ZXJ0L3RzL3BhcnNlci90cy1wYXJzZXItZmlsZSdcbmltcG9ydCB7IFRzRW50aXR5UGFyc2VyIH0gZnJvbSAnc3JjL3NlcnZpY2UvY29udmVydC90cy90cy1lbnRpdHktcGFyc2VyJ1xuaW1wb3J0IHsgdHNFbnRpdHlTZXJ2aWNlIH0gZnJvbSAnc3JjL3NlcnZpY2UvY29udmVydC90cy90cy1lbnRpdHktc2VydmljZSdcbmltcG9ydCB7IGZpbGVTZXJ2aWNlIH0gZnJvbSAnc3JjL3NlcnZpY2UvZmlsZS1zZXJ2aWNlJ1xuXG5leHBvcnQgY2xhc3MgVHNDb252ZXJ0IGltcGxlbWVudHMgQ29udmVydFN0cmF0ZWd5IHtcbiAgcHJvdGVjdGVkIHJlYWRvbmx5IF9maWxlUGF0aDogc3RyaW5nXG4gIHByb3RlY3RlZCByZWFkb25seSBfZm9sZGVyUGF0aDogc3RyaW5nXG5cbiAgY29uc3RydWN0b3IoeyBmaWxlUGF0aCwgZm9sZGVyUGF0aCB9OiB7IGZpbGVQYXRoOiBzdHJpbmc7IGZvbGRlclBhdGg6IHN0cmluZyB9KSB7XG4gICAgdGhpcy5fZmlsZVBhdGggPSBmaWxlUGF0aFxuICAgIHRoaXMuX2ZvbGRlclBhdGggPSBmb2xkZXJQYXRoXG4gIH1cblxuICBwdWJsaWMgYXN5bmMgY29udmVydCgpOiBQcm9taXNlPEVudGl0eVtdPiB7XG4gICAgY29uc3QgZmlsZVBhdGggPSBmaWxlU2VydmljZS5qb2luUGF0aHModGhpcy5fZm9sZGVyUGF0aCwgdGhpcy5fZmlsZVBhdGgpXG4gICAgY29uc3QgZmlsZU5hbWUgPSBmaWxlU2VydmljZS5maWxlTmFtZUZyb21QYXRoKGZpbGVQYXRoLCB7IHdpdGhFeHRlbnNpb246IHRydWUgfSlcbiAgICBjb25zdCBwYXJzZWRTb3VyY2UgPSBhd2FpdCB0aGlzLl9wYXJzZUZpbGUoZmlsZVBhdGgsIGZpbGVOYW1lKVxuXG4gICAgY29uc3QgaGFzRXhwb3J0c0luRmlsZSA9IHRzRW50aXR5U2VydmljZS5jaGVja0lmVGhlcmVBcmVBbnlFeHBvcnRzKHsgcGFyc2VkU291cmNlIH0pXG4gICAgY29uc3QgaW5Qcm9qZWN0UGF0aCA9IGZpbGVTZXJ2aWNlLmNsZWFudXBQYXRoKHRoaXMuX2ZpbGVQYXRoKVxuICAgIGlmICghaGFzRXhwb3J0c0luRmlsZSkgcmV0dXJuIG5ldyBUc1BhcnNlckZpbGUoeyBwYXJzZWRTb3VyY2UsIGZpbGVOYW1lLCBpblByb2plY3RQYXRoIH0pLnBhcnNlKClcblxuICAgIGNvbnN0IGVudGl0eVBhcnNlciA9IG5ldyBUc0VudGl0eVBhcnNlcih7IHBhcnNlZFNvdXJjZSwgZmlsZU5hbWUsIGluUHJvamVjdFBhdGggfSlcbiAgICByZXR1cm4gZW50aXR5UGFyc2VyLnBhcnNlZEVudGl0aWVzKClcbiAgfVxuXG4gIC8qKlxuICAgKiBodHRwczovL2FsbGVuaHdraW0ubWVkaXVtLmNvbS9ob3ctdG8tcGFyc2UtdHlwZXNjcmlwdC1mcm9tLXNvdXJjZS02NDMzODc5NzFmNGVcbiAgICpcbiAgICogaHR0cHM6Ly90cy1hc3Qtdmlld2VyLmNvbS8jY29kZS9KWVd3RGc5Z1RnTGdCQWJ6Z1lRdUNBN0FwaCtCZk9BTXlqVGdISUFCQVF3d0hNQlhBR3lxZ0hvQmphTE1nYmdDZ0txZE5sd0FLQkh6aHdBemxrWloyTWFBQzV5SUFKNWtBTkpMZ3dzNFp2dFZrQUZuTVlRNElMQURveWZQQUVvK1dBQjZSWWNkczJuUzRBTExxUXBBaThCSjRRQVxuICAgKi9cbiAgcHJvdGVjdGVkIGFzeW5jIF9wYXJzZUZpbGUoZmlsZVBhdGg6IHN0cmluZywgZmlsZU5hbWU6IHN0cmluZyk6IFByb21pc2U8dHMuU291cmNlRmlsZT4ge1xuICAgIGNvbnN0IGZpbGVTb3VyY2UgPSBhd2FpdCBmaWxlU2VydmljZS5yZWFkRmlsZShmaWxlUGF0aClcbiAgICByZXR1cm4gdHMuY3JlYXRlU291cmNlRmlsZShmaWxlTmFtZSwgZmlsZVNvdXJjZSwgdHMuU2NyaXB0VGFyZ2V0LkVTMjAyMCkgLy8gVE9ETyBpbXBsZW1lbnQgcGFyYW0gZm9yIHNjcmlwdCB0YXJnZXRcbiAgfVxufVxuIl19