"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TsConvert = void 0;
const ts_1 = __importDefault(require("src/module/ts"));
const ts_parser_file_1 = require("src/service/convert/ts/parser/ts-parser-file");
const ts_config_file_service_1 = require("src/service/convert/ts/ts-config-file-service");
const ts_entity_parser_1 = require("src/service/convert/ts/ts-entity-parser");
const ts_parser_service_1 = require("src/service/convert/ts/ts-parser-service");
const file_service_1 = require("src/service/file-service");
class TsConvert {
    constructor({ filePath, folderPath }) {
        this._filePath = filePath;
        this._folderPath = folderPath;
    }
    async convert() {
        await ts_config_file_service_1.tsConfigFileService.init();
        const fileName = file_service_1.fileService.fileNameFromPath(this._filePath, { withExtension: true });
        const parsedSource = await this._parseFile(this._filePath, fileName);
        const hasExportsInFile = ts_parser_service_1.tsParserService.checkIfThereAreAnyExports({ parsedSource });
        const inProjectPath = file_service_1.fileService.cleanupPath(this._filePath);
        if (!hasExportsInFile)
            return new ts_parser_file_1.TsParserFile({ parsedSource, fileName, inProjectPath }).parse();
        const entityParser = new ts_entity_parser_1.TsEntityParser({ parsedSource, fileName, inProjectPath });
        return entityParser.parsedEntities();
    }
    /**
     * https://allenhwkim.medium.com/how-to-parse-typescript-from-source-643387971f4e
     *
     * https://ts-ast-viewer.com/#code/JYWwDg9gTgLgBAbzgYQuCA7Aph+BfOAMyjTgHIABAQwwHMBXAGyqgHoBjaLMgbgCgKqdNlwAKBHzhwAzlkZZ2MaAC5yIAJ5kANJLgws4ZvtVkAFnMYQ4ILADoyfPAEo+WAB6RYcds2nS4ALLqQpAi8BJ4QA
     */
    async _parseFile(filePath, fileName) {
        const fileSource = await file_service_1.fileService.readFile(filePath);
        return ts_1.default.createSourceFile(fileName, fileSource, ts_1.default.ScriptTarget.ES2020); // TODO implement param for script target
    }
}
exports.TsConvert = TsConvert;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHMtY29udmVydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zZXJ2aWNlL2NvbnZlcnQvdHMvdHMtY29udmVydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSx1REFBOEI7QUFFOUIsaUZBQTJFO0FBQzNFLDBGQUFtRjtBQUNuRiw4RUFBd0U7QUFDeEUsZ0ZBQTBFO0FBQzFFLDJEQUFzRDtBQUV0RCxNQUFhLFNBQVM7SUFJcEIsWUFBWSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQTRDO1FBQzVFLElBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFBO1FBQ3pCLElBQUksQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFBO0lBQy9CLENBQUM7SUFFTSxLQUFLLENBQUMsT0FBTztRQUNsQixNQUFNLDRDQUFtQixDQUFDLElBQUksRUFBRSxDQUFBO1FBQ2hDLE1BQU0sUUFBUSxHQUFHLDBCQUFXLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxFQUFFLGFBQWEsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFBO1FBQ3RGLE1BQU0sWUFBWSxHQUFHLE1BQU0sSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFBO1FBRXBFLE1BQU0sZ0JBQWdCLEdBQUcsbUNBQWUsQ0FBQyx5QkFBeUIsQ0FBQyxFQUFFLFlBQVksRUFBRSxDQUFDLENBQUE7UUFDcEYsTUFBTSxhQUFhLEdBQUcsMEJBQVcsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO1FBQzdELElBQUksQ0FBQyxnQkFBZ0I7WUFBRSxPQUFPLElBQUksNkJBQVksQ0FBQyxFQUFFLFlBQVksRUFBRSxRQUFRLEVBQUUsYUFBYSxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQTtRQUVqRyxNQUFNLFlBQVksR0FBRyxJQUFJLGlDQUFjLENBQUMsRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLGFBQWEsRUFBRSxDQUFDLENBQUE7UUFDbEYsT0FBTyxZQUFZLENBQUMsY0FBYyxFQUFFLENBQUE7SUFDdEMsQ0FBQztJQUVEOzs7O09BSUc7SUFDTyxLQUFLLENBQUMsVUFBVSxDQUFDLFFBQWdCLEVBQUUsUUFBZ0I7UUFDM0QsTUFBTSxVQUFVLEdBQUcsTUFBTSwwQkFBVyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQTtRQUN2RCxPQUFPLFlBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsVUFBVSxFQUFFLFlBQUUsQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUEsQ0FBQyx5Q0FBeUM7SUFDcEgsQ0FBQztDQUNGO0FBL0JELDhCQStCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVudGl0eSB9IGZyb20gJ3NyYy9tb2RlbC9lbnRpdHknXG5pbXBvcnQgdHMgZnJvbSAnc3JjL21vZHVsZS90cydcbmltcG9ydCB7IENvbnZlcnRTdHJhdGVneSB9IGZyb20gJ3NyYy9zZXJ2aWNlL2NvbnZlcnQvY29udmVydC1zdHJhdGVneSdcbmltcG9ydCB7IFRzUGFyc2VyRmlsZSB9IGZyb20gJ3NyYy9zZXJ2aWNlL2NvbnZlcnQvdHMvcGFyc2VyL3RzLXBhcnNlci1maWxlJ1xuaW1wb3J0IHsgdHNDb25maWdGaWxlU2VydmljZSB9IGZyb20gJ3NyYy9zZXJ2aWNlL2NvbnZlcnQvdHMvdHMtY29uZmlnLWZpbGUtc2VydmljZSdcbmltcG9ydCB7IFRzRW50aXR5UGFyc2VyIH0gZnJvbSAnc3JjL3NlcnZpY2UvY29udmVydC90cy90cy1lbnRpdHktcGFyc2VyJ1xuaW1wb3J0IHsgdHNQYXJzZXJTZXJ2aWNlIH0gZnJvbSAnc3JjL3NlcnZpY2UvY29udmVydC90cy90cy1wYXJzZXItc2VydmljZSdcbmltcG9ydCB7IGZpbGVTZXJ2aWNlIH0gZnJvbSAnc3JjL3NlcnZpY2UvZmlsZS1zZXJ2aWNlJ1xuXG5leHBvcnQgY2xhc3MgVHNDb252ZXJ0IGltcGxlbWVudHMgQ29udmVydFN0cmF0ZWd5IHtcbiAgcHJvdGVjdGVkIHJlYWRvbmx5IF9maWxlUGF0aDogc3RyaW5nXG4gIHByb3RlY3RlZCByZWFkb25seSBfZm9sZGVyUGF0aDogc3RyaW5nXG5cbiAgY29uc3RydWN0b3IoeyBmaWxlUGF0aCwgZm9sZGVyUGF0aCB9OiB7IGZpbGVQYXRoOiBzdHJpbmc7IGZvbGRlclBhdGg6IHN0cmluZyB9KSB7XG4gICAgdGhpcy5fZmlsZVBhdGggPSBmaWxlUGF0aFxuICAgIHRoaXMuX2ZvbGRlclBhdGggPSBmb2xkZXJQYXRoXG4gIH1cblxuICBwdWJsaWMgYXN5bmMgY29udmVydCgpOiBQcm9taXNlPEVudGl0eVtdPiB7XG4gICAgYXdhaXQgdHNDb25maWdGaWxlU2VydmljZS5pbml0KClcbiAgICBjb25zdCBmaWxlTmFtZSA9IGZpbGVTZXJ2aWNlLmZpbGVOYW1lRnJvbVBhdGgodGhpcy5fZmlsZVBhdGgsIHsgd2l0aEV4dGVuc2lvbjogdHJ1ZSB9KVxuICAgIGNvbnN0IHBhcnNlZFNvdXJjZSA9IGF3YWl0IHRoaXMuX3BhcnNlRmlsZSh0aGlzLl9maWxlUGF0aCwgZmlsZU5hbWUpXG5cbiAgICBjb25zdCBoYXNFeHBvcnRzSW5GaWxlID0gdHNQYXJzZXJTZXJ2aWNlLmNoZWNrSWZUaGVyZUFyZUFueUV4cG9ydHMoeyBwYXJzZWRTb3VyY2UgfSlcbiAgICBjb25zdCBpblByb2plY3RQYXRoID0gZmlsZVNlcnZpY2UuY2xlYW51cFBhdGgodGhpcy5fZmlsZVBhdGgpXG4gICAgaWYgKCFoYXNFeHBvcnRzSW5GaWxlKSByZXR1cm4gbmV3IFRzUGFyc2VyRmlsZSh7IHBhcnNlZFNvdXJjZSwgZmlsZU5hbWUsIGluUHJvamVjdFBhdGggfSkucGFyc2UoKVxuXG4gICAgY29uc3QgZW50aXR5UGFyc2VyID0gbmV3IFRzRW50aXR5UGFyc2VyKHsgcGFyc2VkU291cmNlLCBmaWxlTmFtZSwgaW5Qcm9qZWN0UGF0aCB9KVxuICAgIHJldHVybiBlbnRpdHlQYXJzZXIucGFyc2VkRW50aXRpZXMoKVxuICB9XG5cbiAgLyoqXG4gICAqIGh0dHBzOi8vYWxsZW5od2tpbS5tZWRpdW0uY29tL2hvdy10by1wYXJzZS10eXBlc2NyaXB0LWZyb20tc291cmNlLTY0MzM4Nzk3MWY0ZVxuICAgKlxuICAgKiBodHRwczovL3RzLWFzdC12aWV3ZXIuY29tLyNjb2RlL0pZV3dEZzlnVGdMZ0JBYnpnWVF1Q0E3QXBoK0JmT0FNeWpUZ0hJQUJBUXd3SE1CWEFHeXFnSG9CamFMTWdiZ0NnS3FkTmx3QUtCSHpod0F6bGtaWjJNYUFDNXlJQUo1a0FOSkxnd3M0WnZ0VmtBRm5NWVE0SUxBRG95ZlBBRW8rV0FCNlJZY2RzMm5TNEFMTHFRcEFpOEJKNFFBXG4gICAqL1xuICBwcm90ZWN0ZWQgYXN5bmMgX3BhcnNlRmlsZShmaWxlUGF0aDogc3RyaW5nLCBmaWxlTmFtZTogc3RyaW5nKTogUHJvbWlzZTx0cy5Tb3VyY2VGaWxlPiB7XG4gICAgY29uc3QgZmlsZVNvdXJjZSA9IGF3YWl0IGZpbGVTZXJ2aWNlLnJlYWRGaWxlKGZpbGVQYXRoKVxuICAgIHJldHVybiB0cy5jcmVhdGVTb3VyY2VGaWxlKGZpbGVOYW1lLCBmaWxlU291cmNlLCB0cy5TY3JpcHRUYXJnZXQuRVMyMDIwKSAvLyBUT0RPIGltcGxlbWVudCBwYXJhbSBmb3Igc2NyaXB0IHRhcmdldFxuICB9XG59XG4iXX0=