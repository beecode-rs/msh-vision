"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TsConvert = void 0;
const ts_1 = __importDefault(require("src/module/ts"));
const ts_parser_file_1 = require("src/service/convert/ts/parser/ts-parser-file");
const ts_entity_parser_1 = require("src/service/convert/ts/ts-entity-parser");
const ts_entity_service_1 = require("src/service/convert/ts/ts-entity-service");
const file_service_1 = require("src/service/file-service");
class TsConvert {
    constructor({ filePath, folderPath }) {
        this._filePath = filePath;
        this._folderPath = folderPath;
    }
    async convert() {
        const filePath = file_service_1.fileService.joinPaths(this._folderPath, this._filePath);
        const fileName = file_service_1.fileService.fileNameFromPath(filePath, { withExtension: true });
        const parsedSource = await this._parseFile(filePath, fileName);
        const hasExportsInFile = ts_entity_service_1.tsEntityService.checkIfThereAreAnyExports({ parsedSource });
        const inProjectPath = file_service_1.fileService.cleanupPath(this._filePath);
        if (!hasExportsInFile)
            return new ts_parser_file_1.TsParserFile({ parsedSource, fileName, inProjectPath }).parse();
        const entityParser = new ts_entity_parser_1.TsEntityParser({ parsedSource, fileName, inProjectPath });
        return entityParser.parsedEntities();
    }
    /**
     * https://allenhwkim.medium.com/how-to-parse-typescript-from-source-643387971f4e
     *
     * https://ts-ast-viewer.com/#code/JYWwDg9gTgLgBAbzgYQuCA7Aph+BfOAMyjTgHIABAQwwHMBXAGyqgHoBjaLMgbgCgKqdNlwAKBHzhwAzlkZZ2MaAC5yIAJ5kANJLgws4ZvtVkAFnMYQ4ILADoyfPAEo+WAB6RYcds2nS4ALLqQpAi8BJ4QA
     */
    async _parseFile(filePath, fileName) {
        const fileSource = await file_service_1.fileService.readFile(filePath);
        return ts_1.default.createSourceFile(fileName, fileSource, ts_1.default.ScriptTarget.ES2020); // TODO implement param for script target
    }
}
exports.TsConvert = TsConvert;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHMtY29udmVydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zZXJ2aWNlL2NvbnZlcnQvdHMvdHMtY29udmVydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFFQSx1REFBOEI7QUFFOUIsaUZBQTJFO0FBQzNFLDhFQUF3RTtBQUN4RSxnRkFBMEU7QUFDMUUsMkRBQXNEO0FBRXRELE1BQWEsU0FBUztJQUlwQixZQUFZLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBNEM7UUFDNUUsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUE7UUFDekIsSUFBSSxDQUFDLFdBQVcsR0FBRyxVQUFVLENBQUE7SUFDL0IsQ0FBQztJQUVNLEtBQUssQ0FBQyxPQUFPO1FBQ2xCLE1BQU0sUUFBUSxHQUFHLDBCQUFXLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO1FBQ3hFLE1BQU0sUUFBUSxHQUFHLDBCQUFXLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLEVBQUUsYUFBYSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUE7UUFDaEYsTUFBTSxZQUFZLEdBQUcsTUFBTSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FBQTtRQUU5RCxNQUFNLGdCQUFnQixHQUFHLG1DQUFlLENBQUMseUJBQXlCLENBQUMsRUFBRSxZQUFZLEVBQUUsQ0FBQyxDQUFBO1FBQ3BGLE1BQU0sYUFBYSxHQUFHLDBCQUFXLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQTtRQUM3RCxJQUFJLENBQUMsZ0JBQWdCO1lBQUUsT0FBTyxJQUFJLDZCQUFZLENBQUMsRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLGFBQWEsRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUE7UUFFakcsTUFBTSxZQUFZLEdBQUcsSUFBSSxpQ0FBYyxDQUFDLEVBQUUsWUFBWSxFQUFFLFFBQVEsRUFBRSxhQUFhLEVBQUUsQ0FBQyxDQUFBO1FBQ2xGLE9BQU8sWUFBWSxDQUFDLGNBQWMsRUFBRSxDQUFBO0lBQ3RDLENBQUM7SUFFRDs7OztPQUlHO0lBQ08sS0FBSyxDQUFDLFVBQVUsQ0FBQyxRQUFnQixFQUFFLFFBQWdCO1FBQzNELE1BQU0sVUFBVSxHQUFHLE1BQU0sMEJBQVcsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUE7UUFDdkQsT0FBTyxZQUFFLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLFVBQVUsRUFBRSxZQUFFLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFBLENBQUMseUNBQXlDO0lBQ3BILENBQUM7Q0FDRjtBQS9CRCw4QkErQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbnRpdHkgfSBmcm9tICdzcmMvbW9kZWwvZW50aXR5J1xuaW1wb3J0IHsgRW50aXR5RmlsZSB9IGZyb20gJ3NyYy9tb2RlbC9lbnRpdHktZmlsZSdcbmltcG9ydCB0cyBmcm9tICdzcmMvbW9kdWxlL3RzJ1xuaW1wb3J0IHsgQ29udmVydFN0cmF0ZWd5IH0gZnJvbSAnc3JjL3NlcnZpY2UvY29udmVydC9jb252ZXJ0LXN0cmF0ZWd5J1xuaW1wb3J0IHsgVHNQYXJzZXJGaWxlIH0gZnJvbSAnc3JjL3NlcnZpY2UvY29udmVydC90cy9wYXJzZXIvdHMtcGFyc2VyLWZpbGUnXG5pbXBvcnQgeyBUc0VudGl0eVBhcnNlciB9IGZyb20gJ3NyYy9zZXJ2aWNlL2NvbnZlcnQvdHMvdHMtZW50aXR5LXBhcnNlcidcbmltcG9ydCB7IHRzRW50aXR5U2VydmljZSB9IGZyb20gJ3NyYy9zZXJ2aWNlL2NvbnZlcnQvdHMvdHMtZW50aXR5LXNlcnZpY2UnXG5pbXBvcnQgeyBmaWxlU2VydmljZSB9IGZyb20gJ3NyYy9zZXJ2aWNlL2ZpbGUtc2VydmljZSdcblxuZXhwb3J0IGNsYXNzIFRzQ29udmVydCBpbXBsZW1lbnRzIENvbnZlcnRTdHJhdGVneSB7XG4gIHByb3RlY3RlZCByZWFkb25seSBfZmlsZVBhdGg6IHN0cmluZ1xuICBwcm90ZWN0ZWQgcmVhZG9ubHkgX2ZvbGRlclBhdGg6IHN0cmluZ1xuXG4gIGNvbnN0cnVjdG9yKHsgZmlsZVBhdGgsIGZvbGRlclBhdGggfTogeyBmaWxlUGF0aDogc3RyaW5nOyBmb2xkZXJQYXRoOiBzdHJpbmcgfSkge1xuICAgIHRoaXMuX2ZpbGVQYXRoID0gZmlsZVBhdGhcbiAgICB0aGlzLl9mb2xkZXJQYXRoID0gZm9sZGVyUGF0aFxuICB9XG5cbiAgcHVibGljIGFzeW5jIGNvbnZlcnQoKTogUHJvbWlzZTxFbnRpdHlbXT4ge1xuICAgIGNvbnN0IGZpbGVQYXRoID0gZmlsZVNlcnZpY2Uuam9pblBhdGhzKHRoaXMuX2ZvbGRlclBhdGgsIHRoaXMuX2ZpbGVQYXRoKVxuICAgIGNvbnN0IGZpbGVOYW1lID0gZmlsZVNlcnZpY2UuZmlsZU5hbWVGcm9tUGF0aChmaWxlUGF0aCwgeyB3aXRoRXh0ZW5zaW9uOiB0cnVlIH0pXG4gICAgY29uc3QgcGFyc2VkU291cmNlID0gYXdhaXQgdGhpcy5fcGFyc2VGaWxlKGZpbGVQYXRoLCBmaWxlTmFtZSlcblxuICAgIGNvbnN0IGhhc0V4cG9ydHNJbkZpbGUgPSB0c0VudGl0eVNlcnZpY2UuY2hlY2tJZlRoZXJlQXJlQW55RXhwb3J0cyh7IHBhcnNlZFNvdXJjZSB9KVxuICAgIGNvbnN0IGluUHJvamVjdFBhdGggPSBmaWxlU2VydmljZS5jbGVhbnVwUGF0aCh0aGlzLl9maWxlUGF0aClcbiAgICBpZiAoIWhhc0V4cG9ydHNJbkZpbGUpIHJldHVybiBuZXcgVHNQYXJzZXJGaWxlKHsgcGFyc2VkU291cmNlLCBmaWxlTmFtZSwgaW5Qcm9qZWN0UGF0aCB9KS5wYXJzZSgpXG5cbiAgICBjb25zdCBlbnRpdHlQYXJzZXIgPSBuZXcgVHNFbnRpdHlQYXJzZXIoeyBwYXJzZWRTb3VyY2UsIGZpbGVOYW1lLCBpblByb2plY3RQYXRoIH0pXG4gICAgcmV0dXJuIGVudGl0eVBhcnNlci5wYXJzZWRFbnRpdGllcygpXG4gIH1cblxuICAvKipcbiAgICogaHR0cHM6Ly9hbGxlbmh3a2ltLm1lZGl1bS5jb20vaG93LXRvLXBhcnNlLXR5cGVzY3JpcHQtZnJvbS1zb3VyY2UtNjQzMzg3OTcxZjRlXG4gICAqXG4gICAqIGh0dHBzOi8vdHMtYXN0LXZpZXdlci5jb20vI2NvZGUvSllXd0RnOWdUZ0xnQkFiemdZUXVDQTdBcGgrQmZPQU15alRnSElBQkFRd3dITUJYQUd5cWdIb0JqYUxNZ2JnQ2dLcWRObHdBS0JIemh3QXpsa1paMk1hQUM1eUlBSjVrQU5KTGd3czRadnRWa0FGbk1ZUTRJTEFEb3lmUEFFbytXQUI2UlljZHMyblM0QUxMcVFwQWk4Qko0UUFcbiAgICovXG4gIHByb3RlY3RlZCBhc3luYyBfcGFyc2VGaWxlKGZpbGVQYXRoOiBzdHJpbmcsIGZpbGVOYW1lOiBzdHJpbmcpOiBQcm9taXNlPHRzLlNvdXJjZUZpbGU+IHtcbiAgICBjb25zdCBmaWxlU291cmNlID0gYXdhaXQgZmlsZVNlcnZpY2UucmVhZEZpbGUoZmlsZVBhdGgpXG4gICAgcmV0dXJuIHRzLmNyZWF0ZVNvdXJjZUZpbGUoZmlsZU5hbWUsIGZpbGVTb3VyY2UsIHRzLlNjcmlwdFRhcmdldC5FUzIwMjApIC8vIFRPRE8gaW1wbGVtZW50IHBhcmFtIGZvciBzY3JpcHQgdGFyZ2V0XG4gIH1cbn1cbiJdfQ==