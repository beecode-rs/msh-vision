"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TsParserImport = void 0;
class TsParserImport {
    constructor({ statement }) {
        this._statement = statement;
    }
    parse() {
        const names = [];
        const importClause = this._statement['importClause'];
        if (!importClause)
            return [];
        names.push(...this._parseDefaultImport(importClause));
        names.push(...this._parseBindingName(importClause));
        names.push(...this._parseElements(importClause.namedBindings?.elements));
        const inProjectPath = `${this._statement['moduleSpecifier'].text}.ts`;
        return names.map((name) => ({ name, inProjectPath }));
    }
    _parseDefaultImport(importClause) {
        if (importClause?.name?.escapedText)
            return [importClause.name.escapedText];
        return [];
    }
    _parseBindingName(importClause) {
        if (importClause?.namedBindings?.name?.escapedText)
            return [importClause.namedBindings.name.escapedText];
        return [];
    }
    _parseElements(elements) {
        if (!elements || elements.length === 0)
            return [];
        return elements.map((e) => e.name?.escapedText).filter(Boolean);
    }
}
exports.TsParserImport = TsParserImport;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHMtcGFyc2VyLWltcG9ydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9zZXJ2aWNlL2NvbnZlcnQvdHMvcGFyc2VyL3RzLXBhcnNlci1pbXBvcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBS0EsTUFBYSxjQUFjO0lBR3pCLFlBQVksRUFBRSxTQUFTLEVBQStCO1FBQ3BELElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFBO0lBQzdCLENBQUM7SUFFTSxLQUFLO1FBQ1YsTUFBTSxLQUFLLEdBQWEsRUFBRSxDQUFBO1FBQzFCLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsY0FBYyxDQUFDLENBQUE7UUFDcEQsSUFBSSxDQUFDLFlBQVk7WUFBRSxPQUFPLEVBQUUsQ0FBQTtRQUU1QixLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUE7UUFDckQsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFBO1FBQ25ELEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBQyxhQUFhLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQTtRQUV4RSxNQUFNLGFBQWEsR0FBRyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxJQUFJLEtBQUssQ0FBQTtRQUNyRSxPQUFPLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFLENBQUMsQ0FBQyxDQUFBO0lBQ3ZELENBQUM7SUFDUyxtQkFBbUIsQ0FBQyxZQUFpQjtRQUM3QyxJQUFJLFlBQVksRUFBRSxJQUFJLEVBQUUsV0FBVztZQUFFLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFBO1FBQzNFLE9BQU8sRUFBRSxDQUFBO0lBQ1gsQ0FBQztJQUNTLGlCQUFpQixDQUFDLFlBQWlCO1FBQzNDLElBQUksWUFBWSxFQUFFLGFBQWEsRUFBRSxJQUFJLEVBQUUsV0FBVztZQUFFLE9BQU8sQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQTtRQUN4RyxPQUFPLEVBQUUsQ0FBQTtJQUNYLENBQUM7SUFDUyxjQUFjLENBQUMsUUFBYTtRQUNwQyxJQUFJLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxNQUFNLEtBQUssQ0FBQztZQUFFLE9BQU8sRUFBRSxDQUFBO1FBQ2pELE9BQU8sUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxXQUFXLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUE7SUFDakUsQ0FBQztDQUNGO0FBL0JELHdDQStCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0cyBmcm9tICdzcmMvbW9kdWxlL3RzJ1xuaW1wb3J0IHsgUGFyc2FibGUgfSBmcm9tICdzcmMvc2VydmljZS9jb252ZXJ0L3RzL3BhcnNlci9wYXJzYWJsZSdcblxuZXhwb3J0IHR5cGUgVHNQYXJzZXJJbXBvcnRQYXJzZVJlc3VsdCA9IHsgbmFtZTogc3RyaW5nOyBpblByb2plY3RQYXRoOiBzdHJpbmcgfVxuXG5leHBvcnQgY2xhc3MgVHNQYXJzZXJJbXBvcnQgaW1wbGVtZW50cyBQYXJzYWJsZTxUc1BhcnNlckltcG9ydFBhcnNlUmVzdWx0W10+IHtcbiAgcHJvdGVjdGVkIHJlYWRvbmx5IF9zdGF0ZW1lbnQ6IHRzLlN0YXRlbWVudFxuXG4gIGNvbnN0cnVjdG9yKHsgc3RhdGVtZW50IH06IHsgc3RhdGVtZW50OiB0cy5TdGF0ZW1lbnQgfSkge1xuICAgIHRoaXMuX3N0YXRlbWVudCA9IHN0YXRlbWVudFxuICB9XG5cbiAgcHVibGljIHBhcnNlKCk6IFRzUGFyc2VySW1wb3J0UGFyc2VSZXN1bHRbXSB7XG4gICAgY29uc3QgbmFtZXM6IHN0cmluZ1tdID0gW11cbiAgICBjb25zdCBpbXBvcnRDbGF1c2UgPSB0aGlzLl9zdGF0ZW1lbnRbJ2ltcG9ydENsYXVzZSddXG4gICAgaWYgKCFpbXBvcnRDbGF1c2UpIHJldHVybiBbXVxuXG4gICAgbmFtZXMucHVzaCguLi50aGlzLl9wYXJzZURlZmF1bHRJbXBvcnQoaW1wb3J0Q2xhdXNlKSlcbiAgICBuYW1lcy5wdXNoKC4uLnRoaXMuX3BhcnNlQmluZGluZ05hbWUoaW1wb3J0Q2xhdXNlKSlcbiAgICBuYW1lcy5wdXNoKC4uLnRoaXMuX3BhcnNlRWxlbWVudHMoaW1wb3J0Q2xhdXNlLm5hbWVkQmluZGluZ3M/LmVsZW1lbnRzKSlcblxuICAgIGNvbnN0IGluUHJvamVjdFBhdGggPSBgJHt0aGlzLl9zdGF0ZW1lbnRbJ21vZHVsZVNwZWNpZmllciddLnRleHR9LnRzYFxuICAgIHJldHVybiBuYW1lcy5tYXAoKG5hbWUpID0+ICh7IG5hbWUsIGluUHJvamVjdFBhdGggfSkpXG4gIH1cbiAgcHJvdGVjdGVkIF9wYXJzZURlZmF1bHRJbXBvcnQoaW1wb3J0Q2xhdXNlOiBhbnkpOiBzdHJpbmdbXSB7XG4gICAgaWYgKGltcG9ydENsYXVzZT8ubmFtZT8uZXNjYXBlZFRleHQpIHJldHVybiBbaW1wb3J0Q2xhdXNlLm5hbWUuZXNjYXBlZFRleHRdXG4gICAgcmV0dXJuIFtdXG4gIH1cbiAgcHJvdGVjdGVkIF9wYXJzZUJpbmRpbmdOYW1lKGltcG9ydENsYXVzZTogYW55KTogc3RyaW5nW10ge1xuICAgIGlmIChpbXBvcnRDbGF1c2U/Lm5hbWVkQmluZGluZ3M/Lm5hbWU/LmVzY2FwZWRUZXh0KSByZXR1cm4gW2ltcG9ydENsYXVzZS5uYW1lZEJpbmRpbmdzLm5hbWUuZXNjYXBlZFRleHRdXG4gICAgcmV0dXJuIFtdXG4gIH1cbiAgcHJvdGVjdGVkIF9wYXJzZUVsZW1lbnRzKGVsZW1lbnRzOiBhbnkpOiBzdHJpbmdbXSB7XG4gICAgaWYgKCFlbGVtZW50cyB8fCBlbGVtZW50cy5sZW5ndGggPT09IDApIHJldHVybiBbXVxuICAgIHJldHVybiBlbGVtZW50cy5tYXAoKGUpID0+IGUubmFtZT8uZXNjYXBlZFRleHQpLmZpbHRlcihCb29sZWFuKVxuICB9XG59XG4iXX0=