"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypescriptParserConvert = void 0;
const import_extractor_1 = require("src/service/convert/typescript-parser/import-extractor");
const typescript_parser_entity_service_1 = require("src/service/convert/typescript-parser/typescript-parser-entity-service");
const file_service_1 = require("src/service/file-service");
const typescript_parser_1 = require("typescript-parser");
const parser = new typescript_parser_1.TypescriptParser();
class TypescriptParserConvert {
    constructor({ filePath, folderPath, rootPath }) {
        this._filePath = filePath;
        this._rootPath = rootPath ?? '/';
        this._folderPath = folderPath;
    }
    async convert() {
        const file = await parser.parseFile(file_service_1.fileService.joinPaths(this._folderPath, this._filePath), this._rootPath);
        const cleanRelativeFilePath = file_service_1.fileService.cleanupPath(this._filePath);
        const entities = typescript_parser_entity_service_1.typescriptParserEntityService.extractEntities({ file, filePath: cleanRelativeFilePath });
        entities.forEach((entity) => {
            entity.importReferences.push(...import_extractor_1.importExtractor.extract(file));
        });
        return entities;
    }
}
exports.TypescriptParserConvert = TypescriptParserConvert;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXNjcmlwdC1wYXJzZXItY29udmVydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zZXJ2aWNlL2NvbnZlcnQvdHlwZXNjcmlwdC1wYXJzZXIvdHlwZXNjcmlwdC1wYXJzZXItY29udmVydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSw2RkFBd0Y7QUFDeEYsNkhBQXNIO0FBQ3RILDJEQUFzRDtBQUN0RCx5REFBb0Q7QUFFcEQsTUFBTSxNQUFNLEdBQUcsSUFBSSxvQ0FBZ0IsRUFBRSxDQUFBO0FBRXJDLE1BQWEsdUJBQXVCO0lBSWxDLFlBQVksRUFBRSxRQUFRLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBK0Q7UUFDekcsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUE7UUFDekIsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLElBQUksR0FBRyxDQUFBO1FBQ2hDLElBQUksQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFBO0lBQy9CLENBQUM7SUFFTSxLQUFLLENBQUMsT0FBTztRQUNsQixNQUFNLElBQUksR0FBRyxNQUFNLE1BQU0sQ0FBQyxTQUFTLENBQUMsMEJBQVcsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO1FBRTVHLE1BQU0scUJBQXFCLEdBQUcsMEJBQVcsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO1FBQ3JFLE1BQU0sUUFBUSxHQUFHLGdFQUE2QixDQUFDLGVBQWUsQ0FBQyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUscUJBQXFCLEVBQUUsQ0FBQyxDQUFBO1FBRXpHLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRTtZQUMxQixNQUFNLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEdBQUcsa0NBQWUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQTtRQUNoRSxDQUFDLENBQUMsQ0FBQTtRQUVGLE9BQU8sUUFBUSxDQUFBO0lBQ2pCLENBQUM7Q0FDRjtBQXRCRCwwREFzQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbnRpdHkgfSBmcm9tICdzcmMvbW9kZWwvZW50aXR5J1xuaW1wb3J0IHsgQ29udmVydFN0cmF0ZWd5IH0gZnJvbSAnc3JjL3NlcnZpY2UvY29udmVydC9jb252ZXJ0LXN0cmF0ZWd5J1xuaW1wb3J0IHsgaW1wb3J0RXh0cmFjdG9yIH0gZnJvbSAnc3JjL3NlcnZpY2UvY29udmVydC90eXBlc2NyaXB0LXBhcnNlci9pbXBvcnQtZXh0cmFjdG9yJ1xuaW1wb3J0IHsgdHlwZXNjcmlwdFBhcnNlckVudGl0eVNlcnZpY2UgfSBmcm9tICdzcmMvc2VydmljZS9jb252ZXJ0L3R5cGVzY3JpcHQtcGFyc2VyL3R5cGVzY3JpcHQtcGFyc2VyLWVudGl0eS1zZXJ2aWNlJ1xuaW1wb3J0IHsgZmlsZVNlcnZpY2UgfSBmcm9tICdzcmMvc2VydmljZS9maWxlLXNlcnZpY2UnXG5pbXBvcnQgeyBUeXBlc2NyaXB0UGFyc2VyIH0gZnJvbSAndHlwZXNjcmlwdC1wYXJzZXInXG5cbmNvbnN0IHBhcnNlciA9IG5ldyBUeXBlc2NyaXB0UGFyc2VyKClcblxuZXhwb3J0IGNsYXNzIFR5cGVzY3JpcHRQYXJzZXJDb252ZXJ0IGltcGxlbWVudHMgQ29udmVydFN0cmF0ZWd5IHtcbiAgcHJvdGVjdGVkIHJlYWRvbmx5IF9maWxlUGF0aDogc3RyaW5nXG4gIHByb3RlY3RlZCByZWFkb25seSBfcm9vdFBhdGg6IHN0cmluZ1xuICBwcm90ZWN0ZWQgcmVhZG9ubHkgX2ZvbGRlclBhdGg6IHN0cmluZ1xuICBjb25zdHJ1Y3Rvcih7IGZpbGVQYXRoLCBmb2xkZXJQYXRoLCByb290UGF0aCB9OiB7IGZpbGVQYXRoOiBzdHJpbmc7IGZvbGRlclBhdGg6IHN0cmluZzsgcm9vdFBhdGg/OiBzdHJpbmcgfSkge1xuICAgIHRoaXMuX2ZpbGVQYXRoID0gZmlsZVBhdGhcbiAgICB0aGlzLl9yb290UGF0aCA9IHJvb3RQYXRoID8/ICcvJ1xuICAgIHRoaXMuX2ZvbGRlclBhdGggPSBmb2xkZXJQYXRoXG4gIH1cblxuICBwdWJsaWMgYXN5bmMgY29udmVydCgpOiBQcm9taXNlPEVudGl0eVtdPiB7XG4gICAgY29uc3QgZmlsZSA9IGF3YWl0IHBhcnNlci5wYXJzZUZpbGUoZmlsZVNlcnZpY2Uuam9pblBhdGhzKHRoaXMuX2ZvbGRlclBhdGgsIHRoaXMuX2ZpbGVQYXRoKSwgdGhpcy5fcm9vdFBhdGgpXG5cbiAgICBjb25zdCBjbGVhblJlbGF0aXZlRmlsZVBhdGggPSBmaWxlU2VydmljZS5jbGVhbnVwUGF0aCh0aGlzLl9maWxlUGF0aClcbiAgICBjb25zdCBlbnRpdGllcyA9IHR5cGVzY3JpcHRQYXJzZXJFbnRpdHlTZXJ2aWNlLmV4dHJhY3RFbnRpdGllcyh7IGZpbGUsIGZpbGVQYXRoOiBjbGVhblJlbGF0aXZlRmlsZVBhdGggfSlcblxuICAgIGVudGl0aWVzLmZvckVhY2goKGVudGl0eSkgPT4ge1xuICAgICAgZW50aXR5LmltcG9ydFJlZmVyZW5jZXMucHVzaCguLi5pbXBvcnRFeHRyYWN0b3IuZXh0cmFjdChmaWxlKSlcbiAgICB9KVxuXG4gICAgcmV0dXJuIGVudGl0aWVzXG4gIH1cbn1cbiJdfQ==