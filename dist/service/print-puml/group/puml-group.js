"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PumlGroup = void 0;
const puml_group_service_1 = require("src/service/print-puml/group/puml-group-service");
const puml_entity_1 = require("src/service/print-puml/puml-entity");
const constant_1 = require("src/util/constant");
const string_util_1 = require("src/util/string-util");
class PumlGroup extends puml_entity_1.PumlEntity {
    _groupStrategy;
    _name;
    _type;
    _groupPath;
    groups;
    _templateEnd() {
        return this._groupStrategy.templateEnd();
    }
    _templateStart() {
        return this._groupStrategy.templateStart();
    }
    _print() {
        return [this._printGroups(this.groups)].filter(Boolean);
    }
    _printGroups(groups) {
        return Object.values(groups)
            .map((pg) => pg.print())
            .filter(Boolean)
            .join(constant_1.constant.newRow);
    }
    constructor(params) {
        const { name, type, groupPath, groups = {} } = params;
        super();
        this._name = name;
        this._type = type;
        this._groupPath = groupPath;
        this._groupStrategy = puml_group_service_1.pumlGroupService.strategyFromGroup(this);
        this.groups = groups;
    }
    get Id() {
        return string_util_1.stringUtil.uniqueEntityHash(this.Name, this._groupPath);
    }
    get Name() {
        return this._name;
    }
    get GroupPath() {
        return this._groupPath;
    }
    get Type() {
        return this._type;
    }
}
exports.PumlGroup = PumlGroup;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVtbC1ncm91cC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zZXJ2aWNlL3ByaW50LXB1bWwvZ3JvdXAvcHVtbC1ncm91cC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSx3RkFBa0Y7QUFDbEYsb0VBQStEO0FBQy9ELGdEQUE0QztBQUM1QyxzREFBaUQ7QUFPakQsTUFBYSxTQUFVLFNBQVEsd0JBQVU7SUFDcEIsY0FBYyxDQUFtQjtJQUNqQyxLQUFLLENBQVE7SUFDYixLQUFLLENBQWU7SUFDcEIsVUFBVSxDQUFRO0lBQzlCLE1BQU0sQ0FBNEI7SUFFL0IsWUFBWTtRQUNwQixPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsV0FBVyxFQUFFLENBQUE7SUFDMUMsQ0FBQztJQUVTLGNBQWM7UUFDdEIsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLGFBQWEsRUFBRSxDQUFBO0lBQzVDLENBQUM7SUFFUyxNQUFNO1FBQ2QsT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFBO0lBQ3pELENBQUM7SUFFUyxZQUFZLENBQUMsTUFBa0M7UUFDdkQsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQzthQUN6QixHQUFHLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQzthQUN2QixNQUFNLENBQUMsT0FBTyxDQUFDO2FBQ2YsSUFBSSxDQUFDLG1CQUFRLENBQUMsTUFBTSxDQUFDLENBQUE7SUFDMUIsQ0FBQztJQUVELFlBQVksTUFBcUc7UUFDL0csTUFBTSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE1BQU0sR0FBRyxFQUFFLEVBQUUsR0FBRyxNQUFNLENBQUE7UUFDckQsS0FBSyxFQUFFLENBQUE7UUFDUCxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQTtRQUNqQixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQTtRQUNqQixJQUFJLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQTtRQUMzQixJQUFJLENBQUMsY0FBYyxHQUFHLHFDQUFnQixDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFBO1FBQzlELElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFBO0lBQ3RCLENBQUM7SUFFRCxJQUFXLEVBQUU7UUFDWCxPQUFPLHdCQUFVLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUE7SUFDaEUsQ0FBQztJQUVELElBQVcsSUFBSTtRQUNiLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQTtJQUNuQixDQUFDO0lBRUQsSUFBVyxTQUFTO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQTtJQUN4QixDQUFDO0lBRUQsSUFBVyxJQUFJO1FBQ2IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFBO0lBQ25CLENBQUM7Q0FDRjtBQW5ERCw4QkFtREMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQdW1sR3JvdXBUeXBlIH0gZnJvbSAnc3JjL2VudW0vcHVtbC1ncm91cC10eXBlJ1xuaW1wb3J0IHsgcHVtbEdyb3VwU2VydmljZSB9IGZyb20gJ3NyYy9zZXJ2aWNlL3ByaW50LXB1bWwvZ3JvdXAvcHVtbC1ncm91cC1zZXJ2aWNlJ1xuaW1wb3J0IHsgUHVtbEVudGl0eSB9IGZyb20gJ3NyYy9zZXJ2aWNlL3ByaW50LXB1bWwvcHVtbC1lbnRpdHknXG5pbXBvcnQgeyBjb25zdGFudCB9IGZyb20gJ3NyYy91dGlsL2NvbnN0YW50J1xuaW1wb3J0IHsgc3RyaW5nVXRpbCB9IGZyb20gJ3NyYy91dGlsL3N0cmluZy11dGlsJ1xuXG5leHBvcnQgaW50ZXJmYWNlIFB1bWxHcm91cFN0cmF0ZWd5IHtcbiAgdGVtcGxhdGVTdGFydCgpOiBzdHJpbmdcbiAgdGVtcGxhdGVFbmQoKTogc3RyaW5nXG59XG5cbmV4cG9ydCBjbGFzcyBQdW1sR3JvdXAgZXh0ZW5kcyBQdW1sRW50aXR5IHtcbiAgcHJvdGVjdGVkIHJlYWRvbmx5IF9ncm91cFN0cmF0ZWd5OiBQdW1sR3JvdXBTdHJhdGVneVxuICBwcm90ZWN0ZWQgcmVhZG9ubHkgX25hbWU6IHN0cmluZ1xuICBwcm90ZWN0ZWQgcmVhZG9ubHkgX3R5cGU6IFB1bWxHcm91cFR5cGVcbiAgcHJvdGVjdGVkIHJlYWRvbmx5IF9ncm91cFBhdGg6IHN0cmluZ1xuICBwdWJsaWMgZ3JvdXBzOiB7IFtrOiBzdHJpbmddOiBQdW1sR3JvdXAgfVxuXG4gIHByb3RlY3RlZCBfdGVtcGxhdGVFbmQoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fZ3JvdXBTdHJhdGVneS50ZW1wbGF0ZUVuZCgpXG4gIH1cblxuICBwcm90ZWN0ZWQgX3RlbXBsYXRlU3RhcnQoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fZ3JvdXBTdHJhdGVneS50ZW1wbGF0ZVN0YXJ0KClcbiAgfVxuXG4gIHByb3RlY3RlZCBfcHJpbnQoKTogc3RyaW5nW10ge1xuICAgIHJldHVybiBbdGhpcy5fcHJpbnRHcm91cHModGhpcy5ncm91cHMpXS5maWx0ZXIoQm9vbGVhbilcbiAgfVxuXG4gIHByb3RlY3RlZCBfcHJpbnRHcm91cHMoZ3JvdXBzOiB7IFtrOiBzdHJpbmddOiBQdW1sR3JvdXAgfSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIE9iamVjdC52YWx1ZXMoZ3JvdXBzKVxuICAgICAgLm1hcCgocGcpID0+IHBnLnByaW50KCkpXG4gICAgICAuZmlsdGVyKEJvb2xlYW4pXG4gICAgICAuam9pbihjb25zdGFudC5uZXdSb3cpXG4gIH1cblxuICBjb25zdHJ1Y3RvcihwYXJhbXM6IHsgbmFtZTogc3RyaW5nOyB0eXBlOiBQdW1sR3JvdXBUeXBlOyBncm91cFBhdGg6IHN0cmluZzsgZ3JvdXBzPzogeyBbazogc3RyaW5nXTogUHVtbEdyb3VwIH0gfSkge1xuICAgIGNvbnN0IHsgbmFtZSwgdHlwZSwgZ3JvdXBQYXRoLCBncm91cHMgPSB7fSB9ID0gcGFyYW1zXG4gICAgc3VwZXIoKVxuICAgIHRoaXMuX25hbWUgPSBuYW1lXG4gICAgdGhpcy5fdHlwZSA9IHR5cGVcbiAgICB0aGlzLl9ncm91cFBhdGggPSBncm91cFBhdGhcbiAgICB0aGlzLl9ncm91cFN0cmF0ZWd5ID0gcHVtbEdyb3VwU2VydmljZS5zdHJhdGVneUZyb21Hcm91cCh0aGlzKVxuICAgIHRoaXMuZ3JvdXBzID0gZ3JvdXBzXG4gIH1cblxuICBwdWJsaWMgZ2V0IElkKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHN0cmluZ1V0aWwudW5pcXVlRW50aXR5SGFzaCh0aGlzLk5hbWUsIHRoaXMuX2dyb3VwUGF0aClcbiAgfVxuXG4gIHB1YmxpYyBnZXQgTmFtZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9uYW1lXG4gIH1cblxuICBwdWJsaWMgZ2V0IEdyb3VwUGF0aCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9ncm91cFBhdGhcbiAgfVxuXG4gIHB1YmxpYyBnZXQgVHlwZSgpOiBQdW1sR3JvdXBUeXBlIHtcbiAgICByZXR1cm4gdGhpcy5fdHlwZVxuICB9XG59XG4iXX0=