"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PumlEntity = void 0;
const constant_1 = require("src/util/constant");
class PumlEntity {
    _children = [];
    _relations = [];
    print() {
        const bodyTemplate = [];
        bodyTemplate.push(...this._children.map((c) => c.print()).filter(Boolean));
        bodyTemplate.push(...this._print());
        const template = [];
        if (this._templateStart())
            template.push(this._templateStart());
        template.push(...this._indentRows(bodyTemplate));
        if (this._templateEnd())
            template.push(this._templateEnd());
        return template.join(constant_1.constant.newRow);
    }
    _indentRows(templates) {
        return templates.map((template) => template
            .split(constant_1.constant.newRow)
            .map((row) => `  ${row}`)
            .join(constant_1.constant.newRow));
    }
    addChildren(printable) {
        this._children.push(printable);
    }
    get Children() {
        return this._children;
    }
    printRelations() {
        const template = [];
        template.push(...this._relations.map((r) => r.print()).filter(Boolean));
        return template.join(constant_1.constant.newRow);
    }
}
exports.PumlEntity = PumlEntity;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVtbC1lbnRpdHkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2VydmljZS9wcmludC1wdW1sL3B1bWwtZW50aXR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLGdEQUE0QztBQUU1QyxNQUFzQixVQUFVO0lBQ3BCLFNBQVMsR0FBaUIsRUFBRSxDQUFBO0lBQzVCLFVBQVUsR0FBbUIsRUFBRSxDQUFBO0lBTWxDLEtBQUs7UUFDVixNQUFNLFlBQVksR0FBYSxFQUFFLENBQUE7UUFDakMsWUFBWSxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQTtRQUMxRSxZQUFZLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUE7UUFFbkMsTUFBTSxRQUFRLEdBQWEsRUFBRSxDQUFBO1FBQzdCLElBQUksSUFBSSxDQUFDLGNBQWMsRUFBRTtZQUFFLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUE7UUFDL0QsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQTtRQUNoRCxJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFBRSxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFBO1FBRTNELE9BQU8sUUFBUSxDQUFDLElBQUksQ0FBQyxtQkFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFBO0lBQ3ZDLENBQUM7SUFFUyxXQUFXLENBQUMsU0FBbUI7UUFDdkMsT0FBTyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FDaEMsUUFBUTthQUNMLEtBQUssQ0FBQyxtQkFBUSxDQUFDLE1BQU0sQ0FBQzthQUN0QixHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7YUFDeEIsSUFBSSxDQUFDLG1CQUFRLENBQUMsTUFBTSxDQUFDLENBQ3pCLENBQUE7SUFDSCxDQUFDO0lBRU0sV0FBVyxDQUFDLFNBQXFCO1FBQ3RDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO0lBQ2hDLENBQUM7SUFFRCxJQUFXLFFBQVE7UUFDakIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFBO0lBQ3ZCLENBQUM7SUFFTSxjQUFjO1FBQ25CLE1BQU0sUUFBUSxHQUFhLEVBQUUsQ0FBQTtRQUM3QixRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFBO1FBQ3ZFLE9BQU8sUUFBUSxDQUFDLElBQUksQ0FBQyxtQkFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFBO0lBQ3ZDLENBQUM7Q0FDRjtBQTNDRCxnQ0EyQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQdW1sUmVsYXRpb24gfSBmcm9tICdzcmMvc2VydmljZS9wcmludC1wdW1sL3B1bWwtcmVsYXRpb24nXG5pbXBvcnQgeyBjb25zdGFudCB9IGZyb20gJ3NyYy91dGlsL2NvbnN0YW50J1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgUHVtbEVudGl0eSB7XG4gIHByb3RlY3RlZCBfY2hpbGRyZW46IFB1bWxFbnRpdHlbXSA9IFtdXG4gIHByb3RlY3RlZCBfcmVsYXRpb25zOiBQdW1sUmVsYXRpb25bXSA9IFtdXG5cbiAgcHJvdGVjdGVkIGFic3RyYWN0IF90ZW1wbGF0ZUVuZCgpOiBzdHJpbmdcbiAgcHJvdGVjdGVkIGFic3RyYWN0IF90ZW1wbGF0ZVN0YXJ0KCk6IHN0cmluZ1xuICBwcm90ZWN0ZWQgYWJzdHJhY3QgX3ByaW50KCk6IHN0cmluZ1tdXG5cbiAgcHVibGljIHByaW50KCk6IHN0cmluZyB7XG4gICAgY29uc3QgYm9keVRlbXBsYXRlOiBzdHJpbmdbXSA9IFtdXG4gICAgYm9keVRlbXBsYXRlLnB1c2goLi4udGhpcy5fY2hpbGRyZW4ubWFwKChjKSA9PiBjLnByaW50KCkpLmZpbHRlcihCb29sZWFuKSlcbiAgICBib2R5VGVtcGxhdGUucHVzaCguLi50aGlzLl9wcmludCgpKVxuXG4gICAgY29uc3QgdGVtcGxhdGU6IHN0cmluZ1tdID0gW11cbiAgICBpZiAodGhpcy5fdGVtcGxhdGVTdGFydCgpKSB0ZW1wbGF0ZS5wdXNoKHRoaXMuX3RlbXBsYXRlU3RhcnQoKSlcbiAgICB0ZW1wbGF0ZS5wdXNoKC4uLnRoaXMuX2luZGVudFJvd3MoYm9keVRlbXBsYXRlKSlcbiAgICBpZiAodGhpcy5fdGVtcGxhdGVFbmQoKSkgdGVtcGxhdGUucHVzaCh0aGlzLl90ZW1wbGF0ZUVuZCgpKVxuXG4gICAgcmV0dXJuIHRlbXBsYXRlLmpvaW4oY29uc3RhbnQubmV3Um93KVxuICB9XG5cbiAgcHJvdGVjdGVkIF9pbmRlbnRSb3dzKHRlbXBsYXRlczogc3RyaW5nW10pOiBzdHJpbmdbXSB7XG4gICAgcmV0dXJuIHRlbXBsYXRlcy5tYXAoKHRlbXBsYXRlKSA9PlxuICAgICAgdGVtcGxhdGVcbiAgICAgICAgLnNwbGl0KGNvbnN0YW50Lm5ld1JvdylcbiAgICAgICAgLm1hcCgocm93KSA9PiBgICAke3Jvd31gKVxuICAgICAgICAuam9pbihjb25zdGFudC5uZXdSb3cpXG4gICAgKVxuICB9XG5cbiAgcHVibGljIGFkZENoaWxkcmVuKHByaW50YWJsZTogUHVtbEVudGl0eSk6IHZvaWQge1xuICAgIHRoaXMuX2NoaWxkcmVuLnB1c2gocHJpbnRhYmxlKVxuICB9XG5cbiAgcHVibGljIGdldCBDaGlsZHJlbigpOiBQdW1sRW50aXR5W10ge1xuICAgIHJldHVybiB0aGlzLl9jaGlsZHJlblxuICB9XG5cbiAgcHVibGljIHByaW50UmVsYXRpb25zKCk6IHN0cmluZyB7XG4gICAgY29uc3QgdGVtcGxhdGU6IHN0cmluZ1tdID0gW11cbiAgICB0ZW1wbGF0ZS5wdXNoKC4uLnRoaXMuX3JlbGF0aW9ucy5tYXAoKHIpID0+IHIucHJpbnQoKSkuZmlsdGVyKEJvb2xlYW4pKVxuICAgIHJldHVybiB0ZW1wbGF0ZS5qb2luKGNvbnN0YW50Lm5ld1JvdylcbiAgfVxufVxuIl19