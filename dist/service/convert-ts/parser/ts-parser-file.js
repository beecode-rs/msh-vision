"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TsParserFile = void 0;
const entity_types_1 = require("src/enum/entity-types");
const reference_type_1 = require("src/enum/reference-type");
const entity_1 = require("src/service/model/entity");
const reference_1 = require("src/service/model/reference");
class TsParserFile {
    _parsedSource;
    _inProjectPath;
    _fileName;
    _importParseResults;
    constructor(params) {
        const { parsedSource, inProjectPath, fileName, importParseResults } = params;
        this._parsedSource = parsedSource;
        this._inProjectPath = inProjectPath;
        this._fileName = fileName;
        this._importParseResults = importParseResults;
    }
    parse() {
        const references = this._importParseResults.map(({ name, inProjectPath }) => new reference_1.Reference({ name, inProjectPath, type: reference_type_1.ReferenceType.ASSOCIATION }));
        return [
            new entity_1.Entity({
                type: entity_types_1.EntityTypes.FILE,
                name: this._fileName,
                inProjectPath: this._inProjectPath,
                isExported: true,
                references,
                meta: undefined,
            }),
        ];
    }
}
exports.TsParserFile = TsParserFile;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHMtcGFyc2VyLWZpbGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvc2VydmljZS9jb252ZXJ0LXRzL3BhcnNlci90cy1wYXJzZXItZmlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx3REFBbUQ7QUFDbkQsNERBQXVEO0FBSXZELHFEQUFpRDtBQUNqRCwyREFBdUQ7QUFFdkQsTUFBYSxZQUFZO0lBQ0osYUFBYSxDQUFlO0lBQzVCLGNBQWMsQ0FBUTtJQUN0QixTQUFTLENBQVE7SUFDakIsbUJBQW1CLENBQTZCO0lBRW5FLFlBQVksTUFLWDtRQUNDLE1BQU0sRUFBRSxZQUFZLEVBQUUsYUFBYSxFQUFFLFFBQVEsRUFBRSxrQkFBa0IsRUFBRSxHQUFHLE1BQU0sQ0FBQTtRQUM1RSxJQUFJLENBQUMsYUFBYSxHQUFHLFlBQVksQ0FBQTtRQUNqQyxJQUFJLENBQUMsY0FBYyxHQUFHLGFBQWEsQ0FBQTtRQUNuQyxJQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsQ0FBQTtRQUN6QixJQUFJLENBQUMsbUJBQW1CLEdBQUcsa0JBQWtCLENBQUE7SUFDL0MsQ0FBQztJQUVNLEtBQUs7UUFDVixNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsR0FBRyxDQUM3QyxDQUFDLEVBQUUsSUFBSSxFQUFFLGFBQWEsRUFBRSxFQUFFLEVBQUUsQ0FBQyxJQUFJLHFCQUFTLENBQUMsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFLElBQUksRUFBRSw4QkFBYSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQ3JHLENBQUE7UUFDRCxPQUFPO1lBQ0wsSUFBSSxlQUFNLENBQUM7Z0JBQ1QsSUFBSSxFQUFFLDBCQUFXLENBQUMsSUFBSTtnQkFDdEIsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTO2dCQUNwQixhQUFhLEVBQUUsSUFBSSxDQUFDLGNBQWM7Z0JBQ2xDLFVBQVUsRUFBRSxJQUFJO2dCQUNoQixVQUFVO2dCQUNWLElBQUksRUFBRSxTQUFTO2FBQ2hCLENBQUM7U0FDSCxDQUFBO0lBQ0gsQ0FBQztDQUNGO0FBbENELG9DQWtDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVudGl0eVR5cGVzIH0gZnJvbSAnc3JjL2VudW0vZW50aXR5LXR5cGVzJ1xuaW1wb3J0IHsgUmVmZXJlbmNlVHlwZSB9IGZyb20gJ3NyYy9lbnVtL3JlZmVyZW5jZS10eXBlJ1xuaW1wb3J0IHRzIGZyb20gJ3NyYy9tb2R1bGUvdHMnXG5pbXBvcnQgeyBQYXJzYWJsZSB9IGZyb20gJ3NyYy9zZXJ2aWNlL2NvbnZlcnQtdHMvcGFyc2VyL3BhcnNhYmxlJ1xuaW1wb3J0IHsgVHNQYXJzZXJJbXBvcnRQYXJzZVJlc3VsdCB9IGZyb20gJ3NyYy9zZXJ2aWNlL2NvbnZlcnQtdHMvcGFyc2VyL3RzLXBhcnNlci1pbXBvcnQnXG5pbXBvcnQgeyBFbnRpdHkgfSBmcm9tICdzcmMvc2VydmljZS9tb2RlbC9lbnRpdHknXG5pbXBvcnQgeyBSZWZlcmVuY2UgfSBmcm9tICdzcmMvc2VydmljZS9tb2RlbC9yZWZlcmVuY2UnXG5cbmV4cG9ydCBjbGFzcyBUc1BhcnNlckZpbGUgaW1wbGVtZW50cyBQYXJzYWJsZSB7XG4gIHByb3RlY3RlZCByZWFkb25seSBfcGFyc2VkU291cmNlOiB0cy5Tb3VyY2VGaWxlXG4gIHByb3RlY3RlZCByZWFkb25seSBfaW5Qcm9qZWN0UGF0aDogc3RyaW5nXG4gIHByb3RlY3RlZCByZWFkb25seSBfZmlsZU5hbWU6IHN0cmluZ1xuICBwcm90ZWN0ZWQgcmVhZG9ubHkgX2ltcG9ydFBhcnNlUmVzdWx0czogVHNQYXJzZXJJbXBvcnRQYXJzZVJlc3VsdFtdXG5cbiAgY29uc3RydWN0b3IocGFyYW1zOiB7XG4gICAgcGFyc2VkU291cmNlOiB0cy5Tb3VyY2VGaWxlXG4gICAgaW5Qcm9qZWN0UGF0aDogc3RyaW5nXG4gICAgZmlsZU5hbWU6IHN0cmluZ1xuICAgIGltcG9ydFBhcnNlUmVzdWx0czogVHNQYXJzZXJJbXBvcnRQYXJzZVJlc3VsdFtdXG4gIH0pIHtcbiAgICBjb25zdCB7IHBhcnNlZFNvdXJjZSwgaW5Qcm9qZWN0UGF0aCwgZmlsZU5hbWUsIGltcG9ydFBhcnNlUmVzdWx0cyB9ID0gcGFyYW1zXG4gICAgdGhpcy5fcGFyc2VkU291cmNlID0gcGFyc2VkU291cmNlXG4gICAgdGhpcy5faW5Qcm9qZWN0UGF0aCA9IGluUHJvamVjdFBhdGhcbiAgICB0aGlzLl9maWxlTmFtZSA9IGZpbGVOYW1lXG4gICAgdGhpcy5faW1wb3J0UGFyc2VSZXN1bHRzID0gaW1wb3J0UGFyc2VSZXN1bHRzXG4gIH1cblxuICBwdWJsaWMgcGFyc2UoKTogRW50aXR5PEVudGl0eVR5cGVzLkZJTEU+W10ge1xuICAgIGNvbnN0IHJlZmVyZW5jZXMgPSB0aGlzLl9pbXBvcnRQYXJzZVJlc3VsdHMubWFwKFxuICAgICAgKHsgbmFtZSwgaW5Qcm9qZWN0UGF0aCB9KSA9PiBuZXcgUmVmZXJlbmNlKHsgbmFtZSwgaW5Qcm9qZWN0UGF0aCwgdHlwZTogUmVmZXJlbmNlVHlwZS5BU1NPQ0lBVElPTiB9KVxuICAgIClcbiAgICByZXR1cm4gW1xuICAgICAgbmV3IEVudGl0eSh7XG4gICAgICAgIHR5cGU6IEVudGl0eVR5cGVzLkZJTEUsXG4gICAgICAgIG5hbWU6IHRoaXMuX2ZpbGVOYW1lLFxuICAgICAgICBpblByb2plY3RQYXRoOiB0aGlzLl9pblByb2plY3RQYXRoLFxuICAgICAgICBpc0V4cG9ydGVkOiB0cnVlLFxuICAgICAgICByZWZlcmVuY2VzLFxuICAgICAgICBtZXRhOiB1bmRlZmluZWQsXG4gICAgICB9KSxcbiAgICBdXG4gIH1cbn1cbiJdfQ==