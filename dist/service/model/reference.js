"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Reference = void 0;
const string_util_1 = require("src/util/string-util");
class Reference {
    _name;
    _inProjectPath;
    _type;
    _direction;
    constructor({ name, inProjectPath, type, direction }) {
        this._name = name;
        this._inProjectPath = inProjectPath;
        this._type = type;
        this._direction = direction;
    }
    get Id() {
        return string_util_1.stringUtil.uniqueEntityHash(this.Name, this.InProjectPath);
    }
    get Name() {
        return this._name;
    }
    get InProjectPath() {
        return this._inProjectPath;
    }
    get Type() {
        return this._type;
    }
    get Direction() {
        return this._direction;
    }
    static cloneAndModify(toClone, overrideParams = {}) {
        const params = {
            name: toClone._name,
            inProjectPath: toClone._inProjectPath,
            type: toClone._type,
            direction: toClone._direction,
            ...overrideParams,
        };
        return new Reference(params);
    }
}
exports.Reference = Reference;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVmZXJlbmNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NlcnZpY2UvbW9kZWwvcmVmZXJlbmNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLHNEQUFpRDtBQU1qRCxNQUFhLFNBQVM7SUFDRCxLQUFLLENBQVE7SUFDYixjQUFjLENBQVE7SUFDdEIsS0FBSyxDQUFlO0lBQ3BCLFVBQVUsQ0FBcUI7SUFFbEQsWUFBWSxFQUFFLElBQUksRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBbUI7UUFDbkUsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUE7UUFDakIsSUFBSSxDQUFDLGNBQWMsR0FBRyxhQUFhLENBQUE7UUFDbkMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUE7UUFDakIsSUFBSSxDQUFDLFVBQVUsR0FBRyxTQUFTLENBQUE7SUFDN0IsQ0FBQztJQUVELElBQVcsRUFBRTtRQUNYLE9BQU8sd0JBQVUsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQTtJQUNuRSxDQUFDO0lBQ0QsSUFBVyxJQUFJO1FBQ2IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFBO0lBQ25CLENBQUM7SUFDRCxJQUFXLGFBQWE7UUFDdEIsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFBO0lBQzVCLENBQUM7SUFDRCxJQUFXLElBQUk7UUFDYixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUE7SUFDbkIsQ0FBQztJQUNELElBQVcsU0FBUztRQUNsQixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUE7SUFDeEIsQ0FBQztJQUVNLE1BQU0sQ0FBQyxjQUFjLENBQUMsT0FBa0IsRUFBRSxpQkFBMkMsRUFBRTtRQUM1RixNQUFNLE1BQU0sR0FBb0I7WUFDOUIsSUFBSSxFQUFFLE9BQU8sQ0FBQyxLQUFLO1lBQ25CLGFBQWEsRUFBRSxPQUFPLENBQUMsY0FBYztZQUNyQyxJQUFJLEVBQUUsT0FBTyxDQUFDLEtBQUs7WUFDbkIsU0FBUyxFQUFFLE9BQU8sQ0FBQyxVQUFVO1lBQzdCLEdBQUcsY0FBYztTQUNsQixDQUFBO1FBQ0QsT0FBTyxJQUFJLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUM5QixDQUFDO0NBQ0Y7QUF2Q0QsOEJBdUNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVmZXJlbmNlVHlwZSB9IGZyb20gJ3NyYy9lbnVtL3JlZmVyZW5jZS10eXBlJ1xuaW1wb3J0IHsgTG9jYXRhYmxlIH0gZnJvbSAnc3JjL3NlcnZpY2UvbW9kZWwvbG9jYXRhYmxlJ1xuaW1wb3J0IHsgc3RyaW5nVXRpbCB9IGZyb20gJ3NyYy91dGlsL3N0cmluZy11dGlsJ1xuXG5leHBvcnQgdHlwZSBSZWZlcmVuY2VEaXJlY3Rpb24gPSAndXAnIHwgJ2Rvd24nIHwgJ2xlZnQnIHwgJ3JpZ2h0J1xuXG5leHBvcnQgdHlwZSBSZWZlcmVuY2VQYXJhbXMgPSB7IG5hbWU6IHN0cmluZzsgaW5Qcm9qZWN0UGF0aDogc3RyaW5nOyB0eXBlOiBSZWZlcmVuY2VUeXBlOyBkaXJlY3Rpb24/OiBSZWZlcmVuY2VEaXJlY3Rpb24gfVxuXG5leHBvcnQgY2xhc3MgUmVmZXJlbmNlIGltcGxlbWVudHMgTG9jYXRhYmxlIHtcbiAgcHJvdGVjdGVkIHJlYWRvbmx5IF9uYW1lOiBzdHJpbmdcbiAgcHJvdGVjdGVkIHJlYWRvbmx5IF9pblByb2plY3RQYXRoOiBzdHJpbmdcbiAgcHJvdGVjdGVkIHJlYWRvbmx5IF90eXBlOiBSZWZlcmVuY2VUeXBlXG4gIHByb3RlY3RlZCByZWFkb25seSBfZGlyZWN0aW9uPzogUmVmZXJlbmNlRGlyZWN0aW9uXG5cbiAgY29uc3RydWN0b3IoeyBuYW1lLCBpblByb2plY3RQYXRoLCB0eXBlLCBkaXJlY3Rpb24gfTogUmVmZXJlbmNlUGFyYW1zKSB7XG4gICAgdGhpcy5fbmFtZSA9IG5hbWVcbiAgICB0aGlzLl9pblByb2plY3RQYXRoID0gaW5Qcm9qZWN0UGF0aFxuICAgIHRoaXMuX3R5cGUgPSB0eXBlXG4gICAgdGhpcy5fZGlyZWN0aW9uID0gZGlyZWN0aW9uXG4gIH1cblxuICBwdWJsaWMgZ2V0IElkKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHN0cmluZ1V0aWwudW5pcXVlRW50aXR5SGFzaCh0aGlzLk5hbWUsIHRoaXMuSW5Qcm9qZWN0UGF0aClcbiAgfVxuICBwdWJsaWMgZ2V0IE5hbWUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fbmFtZVxuICB9XG4gIHB1YmxpYyBnZXQgSW5Qcm9qZWN0UGF0aCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9pblByb2plY3RQYXRoXG4gIH1cbiAgcHVibGljIGdldCBUeXBlKCk6IFJlZmVyZW5jZVR5cGUge1xuICAgIHJldHVybiB0aGlzLl90eXBlXG4gIH1cbiAgcHVibGljIGdldCBEaXJlY3Rpb24oKTogUmVmZXJlbmNlRGlyZWN0aW9uIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5fZGlyZWN0aW9uXG4gIH1cblxuICBwdWJsaWMgc3RhdGljIGNsb25lQW5kTW9kaWZ5KHRvQ2xvbmU6IFJlZmVyZW5jZSwgb3ZlcnJpZGVQYXJhbXM6IFBhcnRpYWw8UmVmZXJlbmNlUGFyYW1zPiA9IHt9KTogUmVmZXJlbmNlIHtcbiAgICBjb25zdCBwYXJhbXM6IFJlZmVyZW5jZVBhcmFtcyA9IHtcbiAgICAgIG5hbWU6IHRvQ2xvbmUuX25hbWUsXG4gICAgICBpblByb2plY3RQYXRoOiB0b0Nsb25lLl9pblByb2plY3RQYXRoLFxuICAgICAgdHlwZTogdG9DbG9uZS5fdHlwZSxcbiAgICAgIGRpcmVjdGlvbjogdG9DbG9uZS5fZGlyZWN0aW9uLFxuICAgICAgLi4ub3ZlcnJpZGVQYXJhbXMsXG4gICAgfVxuICAgIHJldHVybiBuZXcgUmVmZXJlbmNlKHBhcmFtcylcbiAgfVxufVxuIl19