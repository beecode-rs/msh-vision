@startuml
    folder "src" as src_b874d07 {
      folder "dal" as dal_fba75381 {
        card exec_result_4f6edd5d [
          ExecResult
          ---
          {
            stdout: string
            stderr: string
            errorOccurred: boolean
          }
        ]
        object "shellDal" as shell_dal_4f6edd5d {
          + cd(dir: string): void
          + exec(cmd: string): Promise<ExecResult>
          + print(message: string): void
          + pwd: string
        }
      }
      folder "service" as service_c83a6ab5 {
        card args_service_params_d268d804 [
          ArgsServiceParams
          ---
          {
            args: string[]
            options: Options
          }
        ]
        card cli_commands_d268d804 [
          CliCommands
          ---
          minimist.ParsedArgs & {
            help: boolean
            h: boolean
            version: boolean
            v: boolean
          }
        ]
        card cmd_generate_params_d268d804 [
          CmdGenerateParams
          ---
          minimist.ParsedArgs & {
            src: string
            dest: string
            appName: string
            tsConfig: string
          }
        ]
        object "argsService" as args_service_d268d804 {
          + argToObject({\n args,\n options \n}: ArgsServiceParams): T
          + cliCommandOptions: Options
          + cmdGenerateParams: Options
          + selectedCommandCount({\n args,\n options \n}: ArgsServiceParams): number
        }
        object "cliService" as cli_service_317b6b45 {
          + printHelp: void
          + printVersion: void
        }
        interface "ConvertStrategy" as convert_strategy_f40b6b4 {
          + convert: Promise<Entity[]>
        }
        object "convertService" as convert_service_f40b6b4 {
          + strategyByFile(params: {\n filePath: string;\n folderPath: string \n}): ConvertStrategy | undefined
        }
        object "fileService" as file_service_3f424ea5 {
          + cleanupPath(relativeOrAbsPath: string): string
          + fileListFromFolder(folderPath: string): Promise<string[]>
          + fileNameFromPath(filePath: string,\n options: {\n withExtension?: boolean \n} = {\n\n}): string
          + importPathFind(params: {\n filePathImportedFrom: string;\n importPath: string \n}): string
          + isAbsPath(relativeOrAbsPath: string): boolean
          + isDotPath(path: string): boolean
          + joinPaths(...paths: string[]): string
          + lastFolderFromPath(filePath: string): string
          + makeFolderIfNotExist(folderPath: string): Promise<void>
          + mkdirAndWriteToFile(params: {\n folderPath: string;\n fileName: string;\n data: string \n}): Promise<void>
          + readFile(filePath: string): Promise<string>
          + relativeToAbsPath(relativeOrAbsPath: string): string
          + writeToFile(params: {\n filePath: string;\n data: string \n}): Promise<void>
        }
        object "helpService" as help_service_20a1eb92 {
          + text: string
        }
        interface "PrintStrategy" as print_strategy_22861314 {
          + print(params: { entities: Entity[] }): Promise<void>
        }
        card print_std_message_db3f045d [
          PrintStdMessage
          ---
          {
            [key: string]: ExecResult
          }
        ]
        object "shellService" as shell_service_db3f045d {
          # _joinResults(results: PrintStdMessage[]): PrintStdMessage
          + cd: shellDal
          + exec: shellDal
          + print: shellDal
          + printError(message: string): void
          + printStdMessage(...messageArgs: PrintStdMessage[]): void
          + printSuccess(message: string): void
        }
        folder "command" as command_7ebc6e5d {
          interface "Executable" as executable_a85166eb {
            + execute: Promise<void>
          }
          class "Generate" as generate_eb5ef3b0 {
            + execute: Promise<void>
          }
          class "PrintHelp" as print_help_2c3c3bf6 {
            + execute: Promise<void>
          }
          class "PrintVersion" as print_version_dc92b85d {
            + execute: Promise<void>
          }
        }
        folder "convert-ts" as convert_ts_ecf50f67 {
          class "ConvertTs" as convert_ts_e1b382dc {
            # _filePath: string
            # _folderPath: string
            # _parseFile(params: {\n filePath: string;\n fileName: string \n}): Promise<ts.SourceFile>
            constructor({\n filePath,\n folderPath \n}: {\n filePath: string;\n folderPath: string \n})
            + convert: Promise<Entity[]>
          }
          card ts_config_file_type_1baff2da [
            TsConfigFileType
            ---
            {
              compilerOptions?: {
                paths?: {
                  [k: string]: string[]
                }
              }
            }
          ]
          object "___tsConfigFileJson" as ts_config_file_json_1baff2da {
          }
          object "tsConfigFileService" as ts_config_file_service_1baff2da {
            # _cleanReplacePaths: {\n startsWith: string;\n replaceWith: string \n}[]
            # _cleanReplaceWith(path: string): string
            # _getFileJson: TsConfigFileType
            + init: Promise<void>
            + moduleAliasResolve(path: string): string
          }
          class "TsEntityParser" as ts_entity_parser_818f015a {
            # _fileName: string
            # _importParseResults: TsParserImportParseResult[]
            # _inProjectPath: string
            # _joinEntitiesByAliasReference(entities: Entity[]): Entity[]
            # _parseStatement(statement: ts.Statement): Entity[]
            # _parseStatements: Entity[]
            # _parsedSource: ts.SourceFile
            # _parserByStatementKind(statement: ts.Statement): Parsable | undefined
            constructor(params: {\n    parsedSource: ts.SourceFile\n    fileName: string\n    inProjectPath: string\n    importParseResults: TsParserImportParseResult[]\n  })
            + parsedEntities: Entity[]
          }
          object "tsParserImportRelations" as ts_parser_import_relations_b8587b04 {
            + findIdentifier(identifierName: string,\n statement: any): boolean
            + findImportRelations(statement: ts.Statement | ts.VariableDeclaration,\n importParseResults: TsParserImportParseResult[]): Reference[]
            + isDeclaration(statement: any): boolean
            + stepIntoArray(identifierName: string,\n statement: any,\n blockNames: string[]): boolean
            + stepIntoNode(identifierName: string,\n statement: any,\n blockNames: string[]): boolean
          }
          object "tsParserService" as ts_parser_service_a99fa6bc {
            # _isViableExportableStatementKind(kind: number): boolean
            + accessLevel(modifiers?: ts.ModifiersArray): PropertyAccessLevelType
            + checkIfThereAreAnyExports(parsedSource: ts.SourceFile): boolean
            + entityLinksFromStatement(params: {\n statement: ts.Statement;\n inProjectPath: string \n}): TsParserImportParseResult[]
            + entityLinksFromStatements(params: {\n parsedSource: ts.SourceFile;\n inProjectPath: string \n}): TsParserImportParseResult[]
            + findClassRelations(params: {\n statement: ts.Statement;\n parsedSource: ts.SourceFile;\n inProjectPath: string \n}): Reference[]
            + importsFromStatement(params: {\n statement: ts.Statement;\n inProjectPath: string \n}): TsParserImportParseResult[]
            + importsFromStatements(params: {\n parsedSource: ts.SourceFile;\n inProjectPath: string \n}): TsParserImportParseResult[]
            + isAbstract(modifiers?: ts.ModifiersArray): boolean
            + isExported(modifiers?: ts.ModifiersArray): boolean
          }
          folder "parser" as parser_e32aa64f {
            interface "Parsable" as parsable_5aa78fd3 {
              + parse: T
            }
            class "TsParserClass" as ts_parser_class_9848e147 {
              # _findProperties: Property[]
              # _importParseResults: TsParserImportParseResult[]
              # _inProjectPath: string
              # _parsedSource: ts.SourceFile
              # _propertiesToString(parameters?: any[]): string
              # _returnTypeValue(member: any): string
              # _statement: ts.Statement
              constructor(params: {\n    parsedSource: ts.SourceFile\n    statement: ts.Statement\n    inProjectPath: string\n    importParseResults: TsParserImportParseResult[]\n  })
              + parse: Entity<EntityTypes.CLASS>[]
            }
            class "TsParserEnum" as ts_parser_enum_b5f7453a {
              # _inProjectPath: string
              # _parsedSource: ts.SourceFile
              # _statement: ts.Statement
              constructor(params: {\n parsedSource: ts.SourceFile;\n statement: ts.Statement;\n inProjectPath: string \n})
              + parse: Entity<EntityTypes.ENUM>[]
            }
            class "TsParserFile" as ts_parser_file_7df94b8f {
              # _fileName: string
              # _importParseResults: TsParserImportParseResult[]
              # _inProjectPath: string
              # _parsedSource: ts.SourceFile
              constructor(params: {\n    parsedSource: ts.SourceFile\n    inProjectPath: string\n    fileName: string\n    importParseResults: TsParserImportParseResult[]\n  })
              + parse: Entity<EntityTypes.FILE>[]
            }
            card ts_parser_import_parse_result_cf8881d4 [
              TsParserImportParseResult
              ---
              { name: string; inProjectPath: string }
            ]
            class "TsParserImport" as ts_parser_import_cf8881d4 {
              # _importedFileInProjectAbsPath(importPath: string): string
              # _inProjectPath: string
              # _parseBindingName(importClause: any): string[]
              # _parseDefaultImport(importClause: any): string[]
              # _parseElements(elements: any): string[]
              # _statement: ts.Statement
              constructor(params: {\n statement: ts.Statement;\n inProjectPath: string \n})
              + parse: TsParserImportParseResult[]
            }
            class "TsParserInterface" as ts_parser_interface_fda3c7ec {
              # _findProperties: Property[]
              # _inProjectPath: string
              # _parsedSource: ts.SourceFile
              # _statement: ts.Statement
              constructor(params: {\n parsedSource: ts.SourceFile;\n statement: ts.Statement;\n inProjectPath: string \n})
              + parse: Entity<EntityTypes.INTERFACE>[]
            }
            class "TsParserObject" as ts_parser_object_400d2cfc {
              # _accessLevel(propName: string): PropertyAccessLevelType
              # _findProperties(properties?: any[]): Property[]
              # _importParseResults: TsParserImportParseResult[]
              # _inProjectPath: string
              # _nameFromDeclarationsList(declarationList: ts.VariableDeclarationList): {\n name: string;\n declaration: ts.VariableDeclaration \n} | undefined
              # _parsedSource: ts.SourceFile
              # _returnTypeValue(property: any): string
              # _statement: ts.Statement
              constructor(params: {\n    parsedSource: ts.SourceFile\n    statement: ts.Statement\n    inProjectPath: string\n    importParseResults: TsParserImportParseResult[]\n  })
              + parse: Entity<EntityTypes.OBJECT>[]
            }
            class "TsParserType" as ts_parser_type_948f391 {
              # _inProjectPath: string
              # _parsedSource: ts.SourceFile
              # _statement: ts.Statement
              constructor(params: {\n parsedSource: ts.SourceFile;\n statement: ts.Statement;\n inProjectPath: string \n})
              + parse: Entity<EntityTypes.TYPE>[]
            }
          }
        }
        folder "model" as model_367b0d5 {
          class "EntityClass" as entity_class_c3530bcb {
            + IsAbstract: boolean
            + Properties: Property[]
            # _isAbstract: boolean
            # _properties: Property[]
            constructor(params: {\n isAbstract?: boolean;\n properties?: Property[] \n})
          }
          class "EntityEnum" as entity_enum_aa45dd16 {
            + Properties: string[]
            # _properties: string[]
            constructor(params: { properties: string[] })
          }
          class "EntityInterface" as entity_interface_4f072400 {
            + Properties: Property[]
            + References: Reference[]
            # _properties: Property[]
            # _references: Reference[]
            constructor(params: {\n references?: Reference[];\n properties?: Property[] \n})
          }
          class "EntityObject" as entity_object_72801f10 {
            + AliasReference: string
            + Properties: Property[]
            # _aliasReference: string
            # _properties: Property[]
            constructor(params: {\n properties?: Property[];\n aliasReference?: string \n})
          }
          class "EntityType" as entity_type_d40d85d {
            + ReturnType: string
            # _returnType: string
            constructor(params: { returnType: string })
          }
          card entity_meta_b03468e8 [
            EntityMeta
            ---
            T extends EntityTypes.CLASS     ? EntityClass
              : T extends EntityTypes.ENUM      ? EntityEnum
              : T extends EntityTypes.INTERFACE ? EntityInterface
              : T extends EntityTypes.OBJECT    ? EntityObject
              : T extends EntityTypes.TYPE      ? EntityType
              : T extends EntityTypes.FILE      ? undefined
              : unknown
          ]
          class "Entity" as entity_b03468e8 {
            + Id: string
            + InProjectPath: string
            + IsExported: boolean
            + Meta: EntityMeta<T>
            + Name: string
            + References: Reference[]
            + References(references: Reference[])
            + SortByName(a: Entity,\n b: Entity): number
            + Type: T
            # _inProjectPath: string
            # _isExported: boolean
            # _meta: EntityMeta<T>
            # _name: string
            # _references: Reference[]
            # _type: T
            constructor(params: {\n    type: T\n    name: string\n    inProjectPath: string\n    isExported: boolean\n    references?: Reference[]\n    meta: EntityMeta<T>\n  })
            + removeIgnoredReferences(ignoredPaths: string[]): void
          }
          interface "Locatable" as locatable_573e15ac {
            + Id: string
            + Name: string
            + InProjectPath: string
          }
          class "Property" as property_96110b14 {
            + AccessLevel: PropertyAccessLevelType
            + FunctionParams: string | undefined
            + IsAbstract: boolean
            + Name: string
            + ReturnType: string
            + SortByName(a: Property,\n b: Property): number
            # _accessLevel: PropertyAccessLevelType
            # _functionParams: string | undefined
            # _isAbstract: boolean
            # _name: string
            # _returnType: string
            constructor(params: {\n    name: string\n    returnType: string\n    accessLevel?: PropertyAccessLevelType\n    isAbstract?: boolean\n    functionParams?: string\n  })
          }
          interface "Referencable" as referencable_5553ad7 {
            + References: Reference[]
          }
          card reference_direction_a6f99758 [
            ReferenceDirection
            ---
            'up' | 'down' | 'left' | 'right'
          ]
          class "Reference" as reference_a6f99758 {
            + Direction: ReferenceDirection | undefined
            + Id: string
            + InProjectPath: string
            + Name: string
            + Type: ReferenceType
            # _direction: ReferenceDirection
            # _inProjectPath: string
            # _name: string
            # _type: ReferenceType
            constructor(params: {\n name: string;\n inProjectPath: string;\n type: ReferenceType;\n direction?: ReferenceDirection \n})
          }
        }
        folder "print-puml" as print_puml_3460a902 {
          class "PumlDocument" as puml_document_f0161d62 {
            # _print: string[]
            # _templateEnd: string
            # _templateStart: string
          }
          abstract "PumlEntity" as puml_entity_85c02856 {
            + Children: PumlEntity[]
            # _children: PumlEntity[]
            # _indentRows(templates: string[]): string[]
            # {abstract} _print: string[]
            # _relations: PumlRelation[]
            # {abstract} _templateEnd: string
            # {abstract} _templateStart: string
            + addChildren(printable: PumlEntity): void
            + print: string
            + printRelations: string
          }
          class "PumlGroup" as puml_group_19ed5812 {
            + GroupPath: string
            + Id: string
            + Name: string
            + Type: PumlGroupType
            # _groupPath: string
            # _name: string
            # _print: string[]
            # _printGroups(groups: { [k: string]: PumlGroup }): string
            # _templateEnd: string
            # _templateStart: string
            # _type: PumlGroupType
            constructor(params: {\n name: string;\n type: PumlGroupType;\n groupPath: string \n})
            + groups: { [k: string]: PumlGroup }
          }
          class "PumlPrint" as puml_print_4aa046fc {
            # _destinationPath: string
            # _fileName:  = vision.puml
            # _flattenGroups(group: PumlGroup): PumlGroup | undefined
            # _generateGroups(entities: Entity[]): void
            # _pumlRelationStrings: string[]
            # _rootGroup: PumlGroup
            # _writeToFile(data: string): Promise<void>
            constructor(params: {\n appName?: string;\n destinationPath: string \n})
            + print(params: { entities: Entity[] }): Promise<void>
          }
          class "PumlRelation" as puml_relation_ddbc15eb {
            # _fromEntity: Entity
            # _linkByReferenceType: string
            # _reference: Reference
            constructor(params: {\n reference: Reference;\n fromEntity: Entity \n})
            + print: string
          }
          object "pumlService" as puml_service_f506c030 {
            + printableStrategyFromEntity(entity: Entity): PumlEntity | undefined
          }
          folder "printable-entity" as printable_entity_91ba4e0 {
            class "PumlPrintableClass" as puml_printable_class_4b11e257 {
              # _entity: Entity<EntityTypes.CLASS>
              # _print: string[]
              # _printProperty(property: Property): string
              # _templateEnd: string
              # _templateStart: string
              constructor(params: { entity: Entity<EntityTypes.CLASS> })
            }
            class "PumlPrintableEnum" as puml_printable_enum_1725040a {
              # _entity: Entity<EntityTypes.ENUM>
              # _print: string[]
              # _templateEnd: string
              # _templateStart: string
              constructor(params: { entity: Entity<EntityTypes.ENUM> })
            }
            class "PumlPrintableFile" as puml_printable_file_3f271d9f {
              # _entity: Entity<EntityTypes.FILE>
              # _print: string[]
              # _templateEnd: string
              # _templateStart: string
              constructor(params: { entity: Entity<EntityTypes.FILE> })
            }
            class "PumlPrintableInterface" as puml_printable_interface_2621ae9c {
              # _entity: Entity<EntityTypes.INTERFACE>
              # _print: string[]
              # _printProperty(property: Property): string
              # _templateEnd: string
              # _templateStart: string
              constructor(params: { entity: Entity<EntityTypes.INTERFACE> })
            }
            class "PumlPrintableObject" as puml_printable_object_736b458c {
              # _entity: Entity<EntityTypes.OBJECT>
              # _print: string[]
              # _printProperty(property: Property): string
              # _templateEnd: string
              # _templateStart: string
              constructor(params: { entity: Entity<EntityTypes.OBJECT> })
            }
            class "PumlPrintableProperty" as puml_printable_property_2d23f5de {
              # _abstractAttribute: string
              # _accessLevel: string
              # _addNewRows(template: string): string
              # _print: string[]
              # _property: Property
              # _propertyName: string
              # _templateEnd: string
              # _templateStart: string
              constructor(params: { property: Property })
            }
            class "PumlPrintableType" as puml_printable_type_f482c241 {
              # _entity: Entity<EntityTypes.TYPE>
              # _print: string[]
              # _templateEnd: string
              # _templateStart: string
              constructor(params: { entity: Entity<EntityTypes.TYPE> })
            }
            class "PumlPrintableWrapper" as puml_printable_wrapper_e6265aaa {
              # _print: string[]
              # _templateEnd: string
              # _templateStart: string
              constructor(protected readonly _string: string)
            }
          }
        }
      }
    }
  cli_service_317b6b45 -up-> help_service_20a1eb92
  cli_service_317b6b45 -up-> shell_service_db3f045d
  generate_eb5ef3b0 .up.|> executable_a85166eb
  print_help_2c3c3bf6 -up-> cli_service_317b6b45
  print_help_2c3c3bf6 .up.|> executable_a85166eb
  print_version_dc92b85d -up-> cli_service_317b6b45
  print_version_dc92b85d .up.|> executable_a85166eb
  convert_service_f40b6b4 -up-> convert_ts_e1b382dc
  convert_ts_e1b382dc -up-> ts_parser_file_7df94b8f
  convert_ts_e1b382dc -up-> ts_config_file_service_1baff2da
  convert_ts_e1b382dc .up.|> convert_strategy_f40b6b4
  ts_parser_class_9848e147 -up-> property_96110b14
  ts_parser_class_9848e147 .up.|> parsable_5aa78fd3
  ts_parser_enum_b5f7453a .up.|> parsable_5aa78fd3
  ts_parser_file_7df94b8f .up.|> parsable_5aa78fd3
  ts_parser_import_cf8881d4 -up-> file_service_3f424ea5
  ts_parser_import_cf8881d4 .up.|> parsable_5aa78fd3
  ts_parser_interface_fda3c7ec -up-> property_96110b14
  ts_parser_interface_fda3c7ec .up.|> parsable_5aa78fd3
  ts_parser_object_400d2cfc -up-> property_96110b14
  ts_parser_object_400d2cfc .up.|> parsable_5aa78fd3
  ts_parser_type_948f391 .up.|> parsable_5aa78fd3
  ts_config_file_json_1baff2da -up-> ts_config_file_type_1baff2da
  ts_entity_parser_818f015a -up-> ts_parser_class_9848e147
  ts_entity_parser_818f015a -up-> ts_parser_enum_b5f7453a
  ts_entity_parser_818f015a -up-> ts_parser_interface_fda3c7ec
  ts_entity_parser_818f015a -up-> ts_parser_object_400d2cfc
  ts_entity_parser_818f015a -up-> ts_parser_type_948f391
  entity_b03468e8 -up-> entity_meta_b03468e8
  entity_b03468e8 .up.|> locatable_573e15ac
  entity_b03468e8 .up.|> referencable_5553ad7
  reference_a6f99758 -up-> reference_direction_a6f99758
  reference_a6f99758 .up.|> locatable_573e15ac
  puml_printable_class_4b11e257 -up-> entity_b03468e8
  puml_printable_class_4b11e257 -up-> property_96110b14
  puml_printable_class_4b11e257 -up-> puml_printable_property_2d23f5de
  puml_printable_class_4b11e257 -up-|> puml_entity_85c02856
  puml_printable_enum_1725040a -up-> entity_b03468e8
  puml_printable_enum_1725040a -up-|> puml_entity_85c02856
  puml_printable_file_3f271d9f -up-> entity_b03468e8
  puml_printable_file_3f271d9f -up-|> puml_entity_85c02856
  puml_printable_interface_2621ae9c -up-> entity_b03468e8
  puml_printable_interface_2621ae9c -up-> puml_printable_property_2d23f5de
  puml_printable_interface_2621ae9c -up-|> puml_entity_85c02856
  puml_printable_object_736b458c -up-> entity_b03468e8
  puml_printable_object_736b458c -up-> property_96110b14
  puml_printable_object_736b458c -up-> puml_printable_property_2d23f5de
  puml_printable_object_736b458c -up-|> puml_entity_85c02856
  puml_printable_property_2d23f5de -up-> property_96110b14
  puml_printable_property_2d23f5de -up-|> puml_entity_85c02856
  puml_printable_type_f482c241 -up-> entity_b03468e8
  puml_printable_type_f482c241 -up-|> puml_entity_85c02856
  puml_printable_wrapper_e6265aaa -up-|> puml_entity_85c02856
  puml_document_f0161d62 -up-|> puml_entity_85c02856
  puml_group_19ed5812 -up-> puml_group_19ed5812
  puml_group_19ed5812 -up-|> puml_entity_85c02856
  puml_print_4aa046fc -up-> file_service_3f424ea5
  puml_print_4aa046fc -up-> puml_printable_wrapper_e6265aaa
  puml_print_4aa046fc -up-> puml_group_19ed5812
  puml_print_4aa046fc .up.|> print_strategy_22861314
  puml_relation_ddbc15eb -up-> entity_b03468e8
  puml_relation_ddbc15eb -up-> reference_a6f99758
  puml_service_f506c030 -up-> puml_printable_class_4b11e257
  puml_service_f506c030 -up-> puml_printable_enum_1725040a
  puml_service_f506c030 -up-> puml_printable_file_3f271d9f
  puml_service_f506c030 -up-> puml_printable_interface_2621ae9c
  puml_service_f506c030 -up-> puml_printable_object_736b458c
  puml_service_f506c030 -up-> puml_printable_type_f482c241
  shell_service_db3f045d -up-> shell_dal_4f6edd5d
  shell_service_db3f045d -up-> print_std_message_db3f045d
@enduml