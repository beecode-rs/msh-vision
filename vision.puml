@startuml
    folder "src" as src_b874d07 {
      artifact "index.ts" as index_ts_e4daf83f {
      }
      folder "app" as app_6faf0769 {
        class "CliApp" as cli_app_8bf9ca45 {
          constructor(args: string[])
        }
        object "app" as app_1d92d491 {
          # _onError(err: Error): Promise<void>
          # _registerOnExit: void
          # _server: undefined | any
          # _start(runApp: App): Promise<void>
          # _stop: Promise<void>
          + start: void
        }
        folder "init" as init_837dc15c {
          class "ExecArgsAsCommand" as exec_args_as_command_d74becbe {
            Name: string
            - ___args: string[]
            # _destroyFn: Promise<void>
            # _initFn: Promise<void>
            constructor(args: string[])
          }
        }
      }
      folder "dal" as dal_fba75381 {
        card "T: ExecResult" as exec_result_4f6edd5d {
        }
        object "shellDal" as shell_dal_4f6edd5d {
          + cd(dir: string): void
          + exec(cmd: string): Promise<ExecResult>
          + print(message: string): void
          + pwd: string
        }
      }
      folder "enum" as enum_1eea471b {
        enum "PumlGroupType" as puml_group_type_87f1b99e {
          FICTIVE = 'fictive'
          FOLDER = 'folder'
          RECTANGLE = 'rectangle'
        }
        enum "ReferenceType" as reference_type_1f38c983 {
          AGGREGATION = 'aggregation'
          ASSOCIATION = 'association'
          COMPOSITION = 'composition'
          DEPENDENCY = 'dependency'
          IMPLEMENTATION = 'implementation'
          INHERITANCE = 'inheritance'
        }
      }
      folder "model" as model_40d91327 {
        class "EntityClass" as entity_class_87e50b39 {
          + IsAbstract: boolean
          + IsExported: boolean
          + Properties: Property[]
          + References: Reference[]
          # _isAbstract: boolean
          # _isExported: boolean
          # _properties: Property[]
          # _references: Reference[]
          constructor(params: {    name: string    inProjectPath: string    isExported?: boolean    isAbstract?: boolean    references?: Reference[]    properties?: Property[]  })
        }
        class "EntityEnum" as entity_enum_f7c58024 {
          + IsExported: boolean
          + Properties: string[]
          # _isExported: boolean
          # _properties: string[]
          constructor(params: { name: string; inProjectPath: string; isExported?: boolean; properties: string[] })
        }
        class "EntityFile" as entity_file_33f169f1 {
          + References: Reference[]
          # _references: Reference[]
          + addAssociation({ name, inProjectPath }: { name: string; inProjectPath: string }): void
          constructor(params: { name: string; inProjectPath: string })
        }
        class "EntityInterface" as entity_interface_590b4132 {
          + IsExported: boolean
          + Properties: Property[]
          + References: Reference[]
          # _isExported: boolean
          # _properties: Property[]
          # _references: Reference[]
          constructor(params: {    name: string    inProjectPath: string    isExported?: boolean    references?: Reference[]    properties?: Property[]  })
        }
        class "EntityObject" as entity_object_784a4022 {
          + AliasReference: string
          + IsExported: boolean
          + Properties: Property[]
          + References: Reference[]
          # _aliasReference: string
          # _isExported: boolean
          # _properties: Property[]
          # _references: Reference[]
          constructor(params: {    name: string    inProjectPath: string    isExported?: boolean    references?: Reference[]    properties?: Property[]    aliasReference?: string  })
        }
        class "EntityType" as entity_type_a3fb7caf {
          + IsExported: boolean
          # _isExported: boolean
          constructor(params: { name: string; inProjectPath: string; isExported?: boolean })
        }
        abstract "Entity" as entity_9581579a {
          + Id: string
          + InProjectPath: string
          + Name: string
          + SortByName(a: Entity, b: Entity): number
          # _inProjectPath: string
          # _name: string
          # constructor(params: { name: string; inProjectPath: string })
          + renameEntity(name: string): void
        }
        interface "Exportable" as exportable_2ac9ab8f {
          + IsExported: boolean
        }
        interface "Locatable" as locatable_b011d3de {
          + Id: string
          + Name: string
          + InProjectPath: string
        }
        enum "PropertyAccessLevelType" as property_access_level_type_d5a84d26 {
          NO_MODIFIER = 'no-modifier'
          PRIVATE = 'private'
          PROTECTED = 'protected'
          PUBLIC = 'public'
        }
        class "Property" as property_d5a84d26 {
          + AccessLevel: PropertyAccessLevelType
          + FunctionParams: string | undefined
          + IsAbstract: boolean
          + Name: string
          + ReturnType: string
          + SortByName(a: Property, b: Property): number
          # _accessLevel: PropertyAccessLevelType
          # _functionParams: string | undefined
          # _isAbstract: boolean
          # _name: string
          # _returnType: string
          constructor(params: {    name: string    returnType: string    accessLevel?: PropertyAccessLevelType    isAbstract?: boolean    functionParams?: string  })
        }
        interface "Referencable" as referencable_31799d25 {
          + References: Reference[]
        }
        class "Reference" as reference_aaef6aea {
          + Id: string
          + InProjectPath: string
          + Name: string
          + Type: ReferenceType
          # _inProjectPath: string
          # _name: string
          # _type: ReferenceType
          constructor(params: { name: string; inProjectPath: string; type: ReferenceType })
        }
      }
      folder "module" as module_9f6f6c52 {
        artifact "ts.ts" as ts_ts_eabf7773 {
        }
      }
      folder "service" as service_c83a6ab5 {
        card "T: ArgsServiceParams" as args_service_params_d268d804 {
        }
        card "T: CliCommands" as cli_commands_d268d804 {
        }
        card "T: CmdGenerateParams" as cmd_generate_params_d268d804 {
        }
        object "argsService" as args_service_d268d804 {
          + argToObject({ args, options }: ArgsServiceParams): T
          + cliCommandOptions: Options
          + cmdGenerateParams: Options
          + selectedCommandCount({ args, options }: ArgsServiceParams): number
        }
        object "cliService" as cli_service_317b6b45 {
          + printHelp: void
          + printVersion: void
        }
        object "fileService" as file_service_3f424ea5 {
          + cleanupPath(relativeOrAbsPath: string): string
          + fileListFromFolder(folderPath: string): Promise<string[]>
          + fileNameFromPath(filePath: string, options: { withExtension?: boolean } = {}): string
          + importPathFind(params: { filePathImportedFrom: string; importPath: string }): string
          + isAbsPath(relativeOrAbsPath: string): boolean
          + isDotPath(path: string): boolean
          + joinPaths(...paths: string[]): string
          + lastFolderFromPath(filePath: string): string
          + makeFolderIfNotExist(folderPath: string): Promise<void>
          + mkdirAndWriteToFile(params: { folderPath: string; fileName: string; data: string }): Promise<void>
          + readFile(filePath: string): Promise<string>
          + relativeToAbsPath(relativeOrAbsPath: string): string
          + writeToFile(params: { filePath: string; data: string }): Promise<void>
        }
        object "helpService" as help_service_20a1eb92 {
          + text: string
        }
        card "T: PrintStdMessage" as print_std_message_db3f045d {
        }
        object "shellService" as shell_service_db3f045d {
          # _joinResults(results: PrintStdMessage[]): PrintStdMessage
          + cd: shellDal
          + exec: shellDal
          + print: shellDal
          + printError(message: string): void
          + printStdMessage(...messageArgs: PrintStdMessage[]): void
          + printSuccess(message: string): void
        }
        folder "command" as command_7ebc6e5d {
          interface "Executable" as executable_a85166eb {
            + execute: Promise<void>
          }
          class "Generate" as generate_eb5ef3b0 {
            + execute: Promise<void>
          }
          class "PrintHelp" as print_help_2c3c3bf6 {
            + execute: Promise<void>
          }
          class "PrintVersion" as print_version_dc92b85d {
            + execute: Promise<void>
          }
        }
        folder "convert" as convert_2b710bad {
          object "convertService" as convert_service_b2b4bfac {
            + strategyByFile(params: { filePath: string; folderPath: string }): ConvertStrategy | undefined
          }
          interface "ConvertStrategy" as convert_strategy_2898ab6a {
            + convert: Promise<Entity[]>
          }
          folder "ts" as ts_42a428a5 {
            card "T: TsConfigFileType" as ts_config_file_type_715f0c18 {
            }
            object "___tsConfigFileJson" as ts_config_file_json_715f0c18 {
            }
            object "tsConfigFileService" as ts_config_file_service_715f0c18 {
              # _cleanReplacePaths: { startsWith: string; replaceWith: string }[]
              # _cleanReplaceWith(path: string): string
              # _getFileJson: TsConfigFileType
              + init: Promise<void>
              + moduleAliasResolve(path: string): string
            }
            class "TsConvert" as ts_convert_87a0875e {
              # _filePath: string
              # _folderPath: string
              # _parseFile(params: { filePath: string; fileName: string }): Promise<ts.SourceFile>
              constructor({ filePath, folderPath }: { filePath: string; folderPath: string })
              + convert: Promise<Entity[]>
            }
            class "TsEntityParser" as ts_entity_parser_d73e1a98 {
              # _fileName: string
              # _findI
              # _importParseResults: TsParserImportParseResult[]
              # _inProjectPath: string
              # _joinEntitiesByAliasReference(entities: Entity[]): Entity[]
              # _parseStatement(statement: ts.Statement): Entity[]
              # _parseStatements: Entity[]
              # _parsedSource: ts.SourceFile
              # _parserByStatementKind(statement: ts.Statement): Parsable | undefined
              constructor(params: {    parsedSource: ts.SourceFile    fileName: string    inProjectPath: string    importParseResults: TsParserImportParseResult[]  })
              + parsedEntities: Entity[]
            }
            object "tsParserImportRelations" as ts_parser_import_relations_62a961c6 {
              + findIdentifier(identifierName: string, statement: any): boolean
              + findImportRelations(statement: ts.Statement | ts.VariableDeclaration, importParseResults: TsParserImportParseResult[]): Reference[]
              + isDeclaration(statement: any): boolean
              + stepIntoArray(identifierName: string, statement: any, blockNames: string[]): boolean
              + stepIntoNode(identifierName: string, statement: any, blockNames: string[]): boolean
            }
            object "tsParserService" as ts_parser_service_e67f4e7e {
              # _isViableExportableStatementKind(kind: number): boolean
              + accessLevel(modifiers?: ts.ModifiersArray): PropertyAccessLevelType
              + checkIfThereAreAnyExports(parsedSource: ts.SourceFile): boolean
              + findClassRelations(params: { statement: ts.Statement; parsedSource: ts.SourceFile; inProjectPath: string }): Reference[]
              + importsFromStatement(params: { statement: ts.Statement; inProjectPath: string }): TsParserImportParseResult[]
              + importsFromStatements(params: { parsedSource: ts.SourceFile; inProjectPath: string }): TsParserImportParseResult[]
              + isAbstract(modifiers?: ts.ModifiersArray): boolean
              + isExported(modifiers?: ts.ModifiersArray): boolean
            }
            folder "parser" as parser_a64afe8d {
              interface "Parsable" as parsable_1dc7e811 {
                + parse: T
              }
              class "TsParserClass" as ts_parser_class_5b693985 {
                # _findProperties: Property[]
                # _importParseResults: TsParserImportParseResult[]
                # _inProjectPath: string
                # _parsedSource: ts.SourceFile
                # _propertiesToString(parameters?: any[]): string
                # _returnTypeValue(member: any): string
                # _statement: ts.Statement
                constructor(params: {    parsedSource: ts.SourceFile    statement: ts.Statement    inProjectPath: string    importParseResults: TsParserImportParseResult[]  })
                + parse: EntityClass[]
              }
              class "TsParserEnum" as ts_parser_enum_2a645d78 {
                # _inProjectPath: string
                # _parsedSource: ts.SourceFile
                # _statement: ts.Statement
                constructor(params: { parsedSource: ts.SourceFile; statement: ts.Statement; inProjectPath: string })
                + parse: EntityEnum[]
              }
              class "TsParserFile" as ts_parser_file_f26663cd {
                # _fileName: string
                # _importParseResults: TsParserImportParseResult[]
                # _inProjectPath: string
                # _parsedSource: ts.SourceFile
                constructor(params: {    parsedSource: ts.SourceFile    inProjectPath: string    fileName: string    importParseResults: TsParserImportParseResult[]  })
                + parse: EntityFile[]
              }
              card "T: TsParserImportParseResult" as ts_parser_import_parse_result_edaa2a96 {
              }
              class "TsParserImport" as ts_parser_import_edaa2a96 {
                # _importedFileInProjectAbsPath(importPath: string): string
                # _inProjectPath: string
                # _parseBindingName(importClause: any): string[]
                # _parseDefaultImport(importClause: any): string[]
                # _parseElements(elements: any): string[]
                # _statement: ts.Statement
                constructor(params: { statement: ts.Statement; inProjectPath: string })
                + parse: TsParserImportParseResult[]
              }
              class "TsParserInterface" as ts_parser_interface_8936afae {
                # _findProperties: Property[]
                # _inProjectPath: string
                # _parsedSource: ts.SourceFile
                # _statement: ts.Statement
                constructor(params: { parsedSource: ts.SourceFile; statement: ts.Statement; inProjectPath: string })
                + parse: EntityInterface[]
              }
              class "TsParserObject" as ts_parser_object_cba014be {
                # _accessLevel(propName: string): PropertyAccessLevelType
                # _findProperties(properties?: any[]): Property[]
                # _importParseResults: TsParserImportParseResult[]
                # _inProjectPath: string
                # _nameFromDeclarationsList(declarationList: ts.VariableDeclarationList): { name: string; declaration: ts.VariableDeclaration } | undefined
                # _parsedSource: ts.SourceFile
                # _returnTypeValue(property: any): string
                # _statement: ts.Statement
                constructor(params: {    parsedSource: ts.SourceFile    statement: ts.Statement    inProjectPath: string    importParseResults: TsParserImportParseResult[]  })
                + parse: EntityObject[]
              }
              class "TsParserType" as ts_parser_type_46289b53 {
                # _inProjectPath: string
                # _statement: ts.Statement
                constructor(params: { statement: ts.Statement; inProjectPath: string })
                + parse: EntityType[]
              }
            }
          }
        }
        folder "print" as print_8fa2e50b {
          interface "PrintStrategy" as print_strategy_5e9faaaa {
            + print(params: { entities: Entity[] }): Promise<void>
          }
          folder "puml" as puml_bc87e940 {
            class "PumlDocument" as puml_document_ebf39ea0 {
              # _print: string[]
              # _templateEnd: string
              # _templateStart: string
            }
            abstract "PumlEntity" as puml_entity_cc3a6994 {
              # _children: PumlEntity[]
              # _indentRows(templates: string[]): string[]
              # {abstract} _print: string[]
              # _relations: PumlRelation[]
              # {abstract} _templateEnd: string
              # {abstract} _templateStart: string
              + addChildren(printable: PumlEntity): void
              + print: string
              + printRelations: string
            }
            class "PumlGroup" as puml_group_a2149850 {
              + GroupPath: string
              + Id: string
              + Name: string
              + Type: string
              # _groupPath: string
              # _name: string
              # _print: string[]
              # _printGroups(groups: { [k: string]: PumlGroup }): string
              # _templateEnd: string
              # _templateStart: string
              # _type: PumlGroupType
              constructor(params: { name: string; type: PumlGroupType; groupPath: string })
              + groups: { [k: string]: PumlGroup }
            }
            class "PumlPrint" as puml_print_77dc46be {
              # _destinationPath: string
              # _fileName:  = vision.puml
              # _generateGroups(entities: Entity[]): void
              # _printableStrategyFromEntity(entity: Entity): PumlEntity | undefined
              # _pumlRelationStrings: string[]
              # _rootGroup: PumlGroup
              # _writeToFile(data: string): Promise<void>
              constructor(params: { appName?: string; destinationPath: string })
              + print(params: { entities: Entity[] }): Promise<void>
            }
            class "PumlRelation" as puml_relation_24365729 {
              # _fromEntity: Entity
              # _linkByReferenceType: string
              # _reference: Reference
              constructor(params: { reference: Reference; fromEntity: Entity })
              + print: string
            }
            folder "printable-entity" as printable_entity_3657a4a2 {
              class "PumlPrintableClass" as puml_printable_class_46ef6395 {
                # _entity: EntityClass
                # _print: string[]
                # _printProperty(property: Property): string
                # _templateEnd: string
                # _templateStart: string
                constructor(params: { entity: EntityClass })
              }
              class "PumlPrintableEnum" as puml_printable_enum_9f4c4448 {
                # _entity: EntityEnum
                # _print: string[]
                # _templateEnd: string
                # _templateStart: string
                constructor(params: { entity: EntityEnum })
              }
              class "PumlPrintableFile" as puml_printable_file_11eb1ddd {
                # _entity: EntityFile
                # _print: string[]
                # _templateEnd: string
                # _templateStart: string
                constructor(params: { entity: EntityFile })
              }
              class "PumlPrintableInterface" as puml_printable_interface_dfa76d5e {
                # _entity: EntityInterface
                # _print: string[]
                # _printProperty(property: Property): string
                # _templateEnd: string
                # _templateStart: string
                constructor(params: { entity: EntityInterface })
              }
              class "PumlPrintableObject" as puml_printable_object_2cf1044e {
                # _entity: EntityObject
                # _print: string[]
                # _printProperty(property: Property): string
                # _templateEnd: string
                # _templateStart: string
                constructor(params: { entity: EntityObject })
              }
              class "PumlPrintableProperty" as puml_printable_property_739e371c {
                # _abstractAttribute: string
                # _accessLevel: string
                # _print: string[]
                # _property: Property
                # _propertyName: string
                # _templateEnd: string
                # _templateStart: string
                constructor(params: { property: Property })
              }
              class "PumlPrintableType" as puml_printable_type_21bec203 {
                # _entity: EntityType
                # _print: string[]
                # _templateEnd: string
                # _templateStart: string
                constructor(params: { entity: EntityType })
              }
              class "PumlPrintableWrapper" as puml_printable_wrapper_b8ea5ae8 {
                # _print: string[]
                # _templateEnd: string
                # _templateStart: string
                constructor(protected readonly _string: string)
              }
            }
          }
        }
      }
      folder "use-case" as use_case_fcef54f2 {
        object "cliInitUseCase" as cli_init_use_case_9439e852 {
          + createCommandFromCliArgs(args: string[]): Executable
          + execArgsAsCommand(args: string[]): Promise<void>
          + ifMoreThenOneCommandSelectedThrowErrorAndPrintHelp(args: string[]): void
          + ifNoCommandSelectedThrowErrorAndPrintHelp(args: string[]): void
        }
        object "visionUseCase" as vision_use_case_dd084107 {
          + processFolder(params: { folderPath: string; printStrategy: PrintStrategy }): Promise<void>
        }
      }
      folder "util" as util_28bcbc6c {
        object "env" as env_939c4ec0 {
        }
        object "config" as config_939c4ec0 {
        }
        card "T: VisionConfigReturn" as vision_config_return_939c4ec0 {
        }
        object "visionConfig" as vision_config_939c4ec0 {
        }
        object "packageJson" as package_json_6be721f4 {
        }
        object "constant" as constant_6be721f4 {
        }
        object "logger" as logger_d1ee5f1e {
        }
        object "shortHash" as short_hash_20f7f236 {
        }
        object "stringUtil" as string_util_20f7f236 {
          + camelCase(name: string): string
          + snakeCase(name: string): string
          + stringToHash(text: string): string
          + uniqueEntityHash(name: string, inProjectPath: string): string
        }
      }
    }
  cli_app_8bf9ca45 -up-|> app_d815df3b
  app_1d92d491 -up-> logger_d1ee5f1e
  exec_args_as_command_d74becbe -up-> cli_init_use_case_9439e852
  exec_args_as_command_d74becbe -up-|> initiate_d815df3b
  shell_dal_4f6edd5d -up-> shell_735e83ab
  index_ts_e4daf83f -up-> logger_d1ee5f1e
  entity_class_87e50b39 -up-|> entity_9581579a
  entity_class_87e50b39 .up.|> exportable_2ac9ab8f
  entity_class_87e50b39 .up.|> referencable_31799d25
  entity_enum_f7c58024 -up-|> entity_9581579a
  entity_enum_f7c58024 .up.|> exportable_2ac9ab8f
  entity_file_33f169f1 -up-|> entity_9581579a
  entity_file_33f169f1 .up.|> referencable_31799d25
  entity_interface_590b4132 -up-|> entity_9581579a
  entity_interface_590b4132 .up.|> exportable_2ac9ab8f
  entity_object_784a4022 -up-|> entity_9581579a
  entity_object_784a4022 .up.|> exportable_2ac9ab8f
  entity_type_a3fb7caf -up-|> entity_9581579a
  entity_type_a3fb7caf .up.|> exportable_2ac9ab8f
  entity_9581579a -up-> string_util_20f7f236
  entity_9581579a .up.|> locatable_b011d3de
  reference_aaef6aea -up-> string_util_20f7f236
  reference_aaef6aea .up.|> locatable_b011d3de
  ts_ts_eabf7773 -up-> ts_88927a5b
  args_service_d268d804 -up-> minimist_91be8eac
  cli_service_317b6b45 -up-> shell_service_db3f045d
  generate_eb5ef3b0 -up-> vision_use_case_dd084107
  generate_eb5ef3b0 .up.|> executable_a85166eb
  print_help_2c3c3bf6 -up-> cli_service_317b6b45
  print_help_2c3c3bf6 .up.|> executable_a85166eb
  print_version_dc92b85d -up-> cli_service_317b6b45
  print_version_dc92b85d .up.|> executable_a85166eb
  convert_service_b2b4bfac -up-> ts_convert_87a0875e
  convert_service_b2b4bfac -up-> logger_d1ee5f1e
  ts_parser_class_5b693985 .up.|> parsable_1dc7e811
  ts_parser_enum_2a645d78 .up.|> parsable_1dc7e811
  ts_parser_file_f26663cd .up.|> parsable_1dc7e811
  ts_parser_import_edaa2a96 -up-> file_service_3f424ea5
  ts_parser_import_edaa2a96 .up.|> parsable_1dc7e811
  ts_parser_interface_8936afae .up.|> parsable_1dc7e811
  ts_parser_object_cba014be -up-> property_access_level_type_d5a84d26
  ts_parser_object_cba014be .up.|> parsable_1dc7e811
  ts_parser_type_46289b53 .up.|> parsable_1dc7e811
  ts_convert_87a0875e -up-> ts_eabf7773
  ts_convert_87a0875e -up-> ts_parser_file_f26663cd
  ts_convert_87a0875e -up-> ts_config_file_service_715f0c18
  ts_convert_87a0875e .up.|> convert_strategy_2898ab6a
  ts_entity_parser_d73e1a98 -up-> ts_eabf7773
  ts_entity_parser_d73e1a98 -up-> ts_parser_class_5b693985
  ts_entity_parser_d73e1a98 -up-> ts_parser_enum_2a645d78
  ts_entity_parser_d73e1a98 -up-> ts_parser_interface_8936afae
  ts_entity_parser_d73e1a98 -up-> ts_parser_object_cba014be
  ts_entity_parser_d73e1a98 -up-> ts_parser_type_46289b53
  ts_entity_parser_d73e1a98 -up-> logger_d1ee5f1e
  ts_parser_service_e67f4e7e -up-> property_access_level_type_d5a84d26
  ts_parser_service_e67f4e7e -up-> ts_parser_import_edaa2a96
  file_service_3f424ea5 -up-> fs_b9f0eb9
  file_service_3f424ea5 -up-> path_6f8e1be1
  puml_printable_class_46ef6395 -up-> puml_printable_property_739e371c
  puml_printable_class_46ef6395 -up-|> puml_entity_cc3a6994
  puml_printable_enum_9f4c4448 -up-|> puml_entity_cc3a6994
  puml_printable_file_11eb1ddd -up-|> puml_entity_cc3a6994
  puml_printable_interface_dfa76d5e -up-> puml_printable_property_739e371c
  puml_printable_interface_dfa76d5e -up-|> puml_entity_cc3a6994
  puml_printable_object_2cf1044e -up-> puml_printable_property_739e371c
  puml_printable_object_2cf1044e -up-|> puml_entity_cc3a6994
  puml_printable_property_739e371c -up-> property_access_level_type_d5a84d26
  puml_printable_property_739e371c -up-|> puml_entity_cc3a6994
  puml_printable_type_21bec203 -up-|> puml_entity_cc3a6994
  puml_printable_wrapper_b8ea5ae8 -up-|> puml_entity_cc3a6994
  puml_document_ebf39ea0 -up-|> puml_entity_cc3a6994
  puml_group_a2149850 -up-> string_util_20f7f236
  puml_group_a2149850 -up-|> puml_entity_cc3a6994
  puml_print_77dc46be -up-> entity_class_87e50b39
  puml_print_77dc46be -up-> entity_enum_f7c58024
  puml_print_77dc46be -up-> entity_file_33f169f1
  puml_print_77dc46be -up-> entity_interface_590b4132
  puml_print_77dc46be -up-> entity_object_784a4022
  puml_print_77dc46be -up-> entity_type_a3fb7caf
  puml_print_77dc46be -up-> file_service_3f424ea5
  puml_print_77dc46be -up-> puml_printable_class_46ef6395
  puml_print_77dc46be -up-> puml_printable_enum_9f4c4448
  puml_print_77dc46be -up-> puml_printable_file_11eb1ddd
  puml_print_77dc46be -up-> puml_printable_interface_dfa76d5e
  puml_print_77dc46be -up-> puml_printable_object_2cf1044e
  puml_print_77dc46be -up-> puml_printable_type_21bec203
  puml_print_77dc46be -up-> logger_d1ee5f1e
  puml_print_77dc46be .up.|> print_strategy_5e9faaaa
  puml_relation_24365729 -up-> reference_type_1f38c983
  shell_service_db3f045d -up-> shell_dal_4f6edd5d
  cli_init_use_case_9439e852 -up-> cli_service_317b6b45
  cli_init_use_case_9439e852 -up-> generate_eb5ef3b0
  cli_init_use_case_9439e852 -up-> print_help_2c3c3bf6
  cli_init_use_case_9439e852 -up-> print_version_dc92b85d
  env_939c4ec0 -up-> msh_node_env_d41da467
  logger_d1ee5f1e -up-> console_logger_329990f7
  string_util_20f7f236 -up-> camel_case_47f625d3
  string_util_20f7f236 -up-> snake_case_47f625d3
@enduml